{"ast":null,"code":"import _slicedToArray from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sigal/code/projects/CRM-react/client/src/components/analytics/Analytics.js\";\nimport React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport { faUsers, faEnvelope, faUserPlus, faGlobeAmericas } from \"@fortawesome/free-solid-svg-icons\";\nimport utils from \"../../utils/utils\";\nimport { URL, COLORS } from \"../../utils/consts\";\nimport \"../../styles/analytics/analytics.css\";\nimport TopEmployees from \"./charts/TopEmployees\";\nimport SalesByMonth from \"./charts/SalesByMonth\";\nimport ClientAcquisition from \"./charts/ClientAcquisition\";\nimport SalesByCategory from \"./charts/SalesByCategory\";\nimport Badges from \"./Badges\";\n\nvar Analytics = /*#__PURE__*/function (_Component) {\n  _inherits(Analytics, _Component);\n\n  function Analytics() {\n    var _this;\n\n    _classCallCheck(this, Analytics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Analytics).call(this));\n\n    _this.getBadges = function () {\n      var clients = _this.state.clients;\n      return [{\n        id: 1,\n        name: \"longTimeClients\",\n        icon: faUsers,\n        header: \"Long-time Clients\",\n        description: \"Clients who joined before 2018\",\n        result: clients.filter(function (c) {\n          return utils.isFrom2018(c.firstContact, true);\n        }).length\n      }, {\n        id: 2,\n        name: \"emailsSent\",\n        icon: faEnvelope,\n        header: \"Emails Sent\",\n        description: \"Number of emails sent in total\",\n        result: clients.filter(function (c) {\n          return c.emailType !== null;\n        }).length\n      }, {\n        id: 3,\n        name: \"targetClients\",\n        icon: faUserPlus,\n        header: \"Target Clients\",\n        description: \"Clients without acquisition\",\n        result: utils.getSales(clients, false).length\n      }, {\n        id: 4,\n        name: \"hottestCountry\",\n        icon: faGlobeAmericas,\n        header: \"Hottest Country\",\n        description: \"Country with highest sales\",\n        result: utils.getTopSalesByKey(utils.getSalesByProperty(\"country\", clients))\n      }];\n    };\n\n    _this.getSalesOf2018 = function () {\n      var clients = _this.state.clients;\n      return utils.getSales(clients, true).filter(function (c) {\n        return utils.isFrom2018(c.firstContact, false);\n      });\n    };\n\n    _this.getSalesByYear = function () {\n      var clients = _this.state.clients;\n      return utils.getSales(clients, true).map(function (c) {\n        return c.firstContact.slice(0, 4);\n      });\n    };\n\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Analytics, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(URL).then(function (res) {\n        console.log(\"res from clients backend: \", res.data.data);\n\n        if (res.data.data.length) {\n          var data = res.data.data;\n\n          _this2.setState({\n            loading: false,\n            clients: data\n          });\n        }\n      }).catch(function (err) {\n        console.log(\"err from clients backend: \", err);\n      });\n    }\n  }, {\n    key: \"getSalesByClientsCategory\",\n    value: function getSalesByClientsCategory(clientsByCategory) {\n      var data = [];\n\n      for (var _i = 0, _Object$entries = Object.entries(clientsByCategory); _i < _Object$entries.length; _i++) {\n        var _ref3 = _Object$entries[_i];\n\n        var _ref2 = _slicedToArray(_ref3, 2);\n\n        var key = _ref2[0];\n        var value = _ref2[1];\n        data.push({\n          name: key,\n          sales: value\n        });\n      }\n\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          clients = _this$state.clients;\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"loader-position\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Loader, {\n          type: \"Puff\",\n          color: COLORS[\"yellow\"],\n          height: 200,\n          width: 200,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"analytics-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Badges, {\n        badges: this.getBadges(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"charts-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TopEmployees, {\n        owners: utils.countSalesByKey(utils.getSalesByProperty(\"owner\", clients)),\n        getOwners: this.getSalesByClientsCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SalesByMonth, {\n        sales: this.getSalesOf2018(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SalesByCategory, {\n        clients: clients,\n        owners: utils.countSalesByKey(utils.getSalesByProperty(\"owner\", clients)),\n        getSalesByCategory: this.getSalesByClientsCategory,\n        countries: utils.countSalesByKey(utils.getSalesByProperty(\"country\", clients)),\n        emailTypes: utils.countSalesByKey(utils.getSalesByProperty(\"emailType\", clients)),\n        years: utils.countSalesByKey(this.getSalesByYear()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ClientAcquisition, {\n        sales: utils.getSales(clients, true),\n        salesOf2018: this.getSalesOf2018(),\n        years: utils.countSalesByKey(this.getSalesByYear()),\n        getSalesByCategory: this.getSalesByClientsCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Analytics;\n}(Component);\n\nexport default Analytics;","map":{"version":3,"sources":["/home/sigal/code/projects/CRM-react/client/src/components/analytics/Analytics.js"],"names":["React","Component","Loader","axios","faUsers","faEnvelope","faUserPlus","faGlobeAmericas","utils","URL","COLORS","TopEmployees","SalesByMonth","ClientAcquisition","SalesByCategory","Badges","Analytics","getBadges","clients","state","id","name","icon","header","description","result","filter","c","isFrom2018","firstContact","length","emailType","getSales","getTopSalesByKey","getSalesByProperty","getSalesOf2018","getSalesByYear","map","slice","loading","get","then","res","console","log","data","setState","catch","err","clientsByCategory","Object","entries","key","value","push","sales","countSalesByKey","getSalesByClientsCategory"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport {\n  faUsers,\n  faEnvelope,\n  faUserPlus,\n  faGlobeAmericas,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport utils from \"../../utils/utils\";\nimport { URL, COLORS } from \"../../utils/consts\";\nimport \"../../styles/analytics/analytics.css\";\nimport TopEmployees from \"./charts/TopEmployees\";\nimport SalesByMonth from \"./charts/SalesByMonth\";\nimport ClientAcquisition from \"./charts/ClientAcquisition\";\nimport SalesByCategory from \"./charts/SalesByCategory\";\nimport Badges from \"./Badges\";\nclass Analytics extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(URL)\n      .then((res) => {\n        console.log(\"res from clients backend: \", res.data.data);\n        if (res.data.data.length) {\n          const { data } = res.data;\n          this.setState({ loading: false, clients: data });\n        }\n      })\n      .catch((err) => {\n        console.log(\"err from clients backend: \", err);\n      });\n  }\n\n  getBadges = () => {\n    const { clients } = this.state;\n    return [\n      {\n        id: 1,\n        name: \"longTimeClients\",\n        icon: faUsers,\n        header: \"Long-time Clients\",\n        description: \"Clients who joined before 2018\",\n        result: clients.filter((c) => utils.isFrom2018(c.firstContact, true))\n          .length,\n      },\n      {\n        id: 2,\n        name: \"emailsSent\",\n        icon: faEnvelope,\n        header: \"Emails Sent\",\n        description: \"Number of emails sent in total\",\n        result: clients.filter((c) => c.emailType !== null).length,\n      },\n      {\n        id: 3,\n        name: \"targetClients\",\n        icon: faUserPlus,\n        header: \"Target Clients\",\n        description: \"Clients without acquisition\",\n        result: utils.getSales(clients, false).length,\n      },\n      {\n        id: 4,\n        name: \"hottestCountry\",\n        icon: faGlobeAmericas,\n        header: \"Hottest Country\",\n        description: \"Country with highest sales\",\n        result: utils.getTopSalesByKey(\n          utils.getSalesByProperty(\"country\", clients)\n        ),\n      },\n    ];\n  };\n\n  getSalesOf2018 = () => {\n    const { clients } = this.state;\n    return utils\n      .getSales(clients, true)\n      .filter((c) => utils.isFrom2018(c.firstContact, false));\n  };\n\n  getSalesByYear = () => {\n    const { clients } = this.state;\n    return utils.getSales(clients, true).map((c) => c.firstContact.slice(0, 4));\n  };\n\n  getSalesByClientsCategory(clientsByCategory) {\n    const data = [];\n    for (const [key, value] of Object.entries(clientsByCategory)) {\n      data.push({\n        name: key,\n        sales: value,\n      });\n    }\n    return data;\n  }\n\n  render() {\n    const { loading, clients } = this.state;\n\n    if (loading) {\n      return (\n        <div id=\"loader-position\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div id=\"analytics-container\">\n        <Badges badges={this.getBadges()} />\n        <div className=\"charts-container\">\n          <TopEmployees\n            owners={utils.countSalesByKey(\n              utils.getSalesByProperty(\"owner\", clients)\n            )}\n            getOwners={this.getSalesByClientsCategory}\n          />\n          <SalesByMonth sales={this.getSalesOf2018()} />\n          <SalesByCategory\n            clients={clients}\n            owners={utils.countSalesByKey(\n              utils.getSalesByProperty(\"owner\", clients)\n            )}\n            getSalesByCategory={this.getSalesByClientsCategory}\n            countries={utils.countSalesByKey(\n              utils.getSalesByProperty(\"country\", clients)\n            )}\n            emailTypes={utils.countSalesByKey(\n              utils.getSalesByProperty(\"emailType\", clients)\n            )}\n            years={utils.countSalesByKey(this.getSalesByYear())}\n          />\n          <ClientAcquisition\n            sales={utils.getSales(clients, true)}\n            salesOf2018={this.getSalesOf2018()}\n            years={utils.countSalesByKey(this.getSalesByYear())}\n            getSalesByCategory={this.getSalesByClientsCategory}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}