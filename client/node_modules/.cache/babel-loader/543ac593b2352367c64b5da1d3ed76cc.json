{"ast":null,"code":"import _defineProperty from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/home/sigal/code/projects/CRM-react/client/src/components/actions/AddClient.js\",\n    _this2 = this;\n\nimport React, { Component } from \"react\";\nimport { ACTION_HEADERS, ACTIONS_BUTTONS, ACTIONS_ALERTS } from \"../../utils/consts\";\nimport Alert from \"../general/Alert\";\nimport Required from \"../general/Required\";\nimport Datalist from \"./Datalist\";\nimport ActionSubHeader from \"./ActionSubHeader\";\nimport \"../../styles/actions/addClient.css\";\n\nvar AddClient = /*#__PURE__*/function (_Component) {\n  _inherits(AddClient, _Component);\n\n  function AddClient(props) {\n    var _this;\n\n    _classCallCheck(this, AddClient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddClient).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.checkNewClientDetails = function (obj) {\n      for (var key in obj) {\n        if (obj[key] === \"\") {\n          return false;\n        }\n      }\n\n      return;\n    };\n\n    _this.validateAction = function (clientAction, alertType) {\n      if (!clientAction) {\n        _this.setState({\n          alertText: ACTIONS_ALERTS[\"addClient\"][alertType],\n          alert: true\n        });\n\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.toggleAlert = function () {\n      _this.setState({\n        alert: !alert\n      });\n    };\n\n    _this.resetInputs = function () {\n      Array.from(document.querySelectorAll(\"input\")).forEach(function (input) {\n        return input.value = \"\";\n      });\n    };\n\n    _this.handleAddClient = function () {\n      var _this$state = _this.state,\n          firstName = _this$state.firstName,\n          surname = _this$state.surname,\n          country = _this$state.country,\n          owner = _this$state.owner;\n\n      if (!_this.validateAction(firstName, \"firstName\") || !_this.validateAction(surname, \"surname\") || !_this.validateAction(country, \"country\") || !_this.validateAction(owner, \"owner\")) {\n        return;\n      }\n\n      var newClient = {\n        name: \"\".concat(firstName, \" \").concat(surname),\n        country: country,\n        owner: owner\n      };\n\n      if (_this.checkNewClientDetails(newClient) === false) {\n        alert(\"please add all the client's details!\");\n      }\n\n      _this.props.addNewClient(newClient);\n\n      _this.setState({\n        firstName: \"\",\n        surname: \"\",\n        country: \"\",\n        owner: \"\"\n      }, _this.resetInputs);\n    };\n\n    _this.state = {\n      firstName: \"\",\n      surname: \"\",\n      country: \"\",\n      owner: \"\",\n      owners: _this.props.owners,\n      alert: false,\n      alertText: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddClient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          surname = _this$state2.surname,\n          country = _this$state2.country,\n          alert = _this$state2.alert,\n          alertText = _this$state2.alertText,\n          owners = _this$state2.owners;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"add-client-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, alert && /*#__PURE__*/React.createElement(Alert, {\n        text: alertText,\n        toggleAlert: this.toggleAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(InputWrapper, {\n        inputType: firstName,\n        inputTypeString: \"firstName\",\n        handleInputChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(InputWrapper, {\n        inputType: surname,\n        inputTypeString: \"surname\",\n        handleInputChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(InputWrapper, {\n        inputType: country,\n        inputTypeString: \"country\",\n        handleInputChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(InputWrapper, {\n        inputTypeString: \"owner\",\n        mapList: owners,\n        id: owners,\n        list: owners,\n        handleInputChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(AddNewClientBtn, {\n        onClick: this.handleAddClient,\n        text: ACTIONS_BUTTONS[\"add\"][\"addNew\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AddClient;\n}(Component);\n\nvar InputWrapper = function InputWrapper(_ref) {\n  var inputType = _ref.inputType,\n      inputTypeString = _ref.inputTypeString,\n      handleInputChange = _ref.handleInputChange,\n      mapList = _ref.mapList,\n      list = _ref.list,\n      id = _ref.id;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-wrapper\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Required, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActionSubHeader, {\n    text: ACTION_HEADERS[\"add\"][inputTypeString],\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), inputTypeString !== \"owner\" ? /*#__PURE__*/React.createElement(Input, {\n    name: inputTypeString,\n    value: inputType,\n    onChange: handleInputChange,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Datalist, {\n    isAddClient: \"true\",\n    list: list,\n    id: id,\n    mapList: mapList,\n    name: inputTypeString,\n    onChange: handleInputChange,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar Input = function Input(_ref2) {\n  var name = _ref2.name,\n      value = _ref2.value,\n      onChange = _ref2.onChange;\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-add-client\",\n    type: \"text\",\n    name: name,\n    value: value ? value : \"\",\n    onChange: onChange,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  });\n};\n\nvar AddNewClientBtn = function AddNewClientBtn(_ref3) {\n  var onClick = _ref3.onClick,\n      text = _ref3.text;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-new-client-btn\",\n    onClick: onClick,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nexport default AddClient;","map":{"version":3,"sources":["/home/sigal/code/projects/CRM-react/client/src/components/actions/AddClient.js"],"names":["React","Component","ACTION_HEADERS","ACTIONS_BUTTONS","ACTIONS_ALERTS","Alert","Required","Datalist","ActionSubHeader","AddClient","props","handleInputChange","event","target","value","name","setState","checkNewClientDetails","obj","key","validateAction","clientAction","alertType","alertText","alert","toggleAlert","resetInputs","Array","from","document","querySelectorAll","forEach","input","handleAddClient","state","firstName","surname","country","owner","newClient","addNewClient","owners","InputWrapper","inputType","inputTypeString","mapList","list","id","Input","onChange","AddNewClientBtn","onClick","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  ACTION_HEADERS,\n  ACTIONS_BUTTONS,\n  ACTIONS_ALERTS\n} from \"../../utils/consts\";\nimport Alert from \"../general/Alert\";\nimport Required from \"../general/Required\";\nimport Datalist from \"./Datalist\";\nimport ActionSubHeader from \"./ActionSubHeader\";\nimport \"../../styles/actions/addClient.css\";\n\nclass AddClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      surname: \"\",\n      country: \"\",\n      owner: \"\",\n      owners: this.props.owners,\n      alert: false,\n      alertText: \"\"\n    };\n  }\n\n  handleInputChange = (event) => {\n    const {\n      target: { value, name }\n    } = event;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  checkNewClientDetails = (obj) => {\n    for (let key in obj) {\n      if (obj[key] === \"\") {\n        return false;\n      }\n    }\n    return;\n  };\n\n  validateAction = (clientAction, alertType) => {\n    if (!clientAction) {\n      this.setState({\n        alertText: ACTIONS_ALERTS[\"addClient\"][alertType],\n        alert: true\n      });\n      return false;\n    }\n    return true;\n  };\n\n  toggleAlert = () => {\n    this.setState({ alert: !alert });\n  };\n\n  resetInputs = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      (input) => (input.value = \"\")\n    );\n  };\n\n  handleAddClient = () => {\n    const { firstName, surname, country, owner } = this.state;\n\n    if (\n      !this.validateAction(firstName, \"firstName\") ||\n      !this.validateAction(surname, \"surname\") ||\n      !this.validateAction(country, \"country\") ||\n      !this.validateAction(owner, \"owner\")\n    ) {\n      return;\n    }\n\n    const newClient = {\n      name: `${firstName} ${surname}`,\n      country: country,\n      owner: owner\n    };\n\n    if (this.checkNewClientDetails(newClient) === false) {\n      alert(\"please add all the client's details!\");\n    }\n\n    this.props.addNewClient(newClient);\n    this.setState(\n      { firstName: \"\", surname: \"\", country: \"\", owner: \"\" },\n      this.resetInputs\n    );\n  };\n\n  render() {\n    const { firstName, surname, country, alert, alertText, owners } =\n      this.state;\n\n    return (\n      <div className=\"add-client-container\">\n        {alert && <Alert text={alertText} toggleAlert={this.toggleAlert} />}\n        <InputWrapper\n          inputType={firstName}\n          inputTypeString=\"firstName\"\n          handleInputChange={this.handleInputChange}\n        />\n        <InputWrapper\n          inputType={surname}\n          inputTypeString=\"surname\"\n          handleInputChange={this.handleInputChange}\n        />\n        <InputWrapper\n          inputType={country}\n          inputTypeString=\"country\"\n          handleInputChange={this.handleInputChange}\n        />\n        <InputWrapper\n          inputTypeString=\"owner\"\n          mapList={owners}\n          id={owners}\n          list={owners}\n          handleInputChange={this.handleInputChange}\n        />\n        <AddNewClientBtn\n          onClick={this.handleAddClient}\n          text={ACTIONS_BUTTONS[\"add\"][\"addNew\"]}\n        />\n      </div>\n    );\n  }\n}\n\nconst InputWrapper = ({\n  inputType,\n  inputTypeString,\n  handleInputChange,\n  mapList,\n  list,\n  id\n}) => {\n  return (\n    <div className=\"input-wrapper\">\n      <Required />\n      <ActionSubHeader text={ACTION_HEADERS[\"add\"][inputTypeString]} />\n      {inputTypeString !== \"owner\" ? (\n        <Input\n          name={inputTypeString}\n          value={inputType}\n          onChange={handleInputChange}\n        />\n      ) : (\n        <Datalist\n          isAddClient=\"true\"\n          list={list}\n          id={id}\n          mapList={mapList}\n          name={inputTypeString}\n          onChange={handleInputChange}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Input = ({ name, value, onChange }) => {\n  return (\n    <input\n      className=\"input-add-client\"\n      type=\"text\"\n      name={name}\n      value={value ? value : \"\"}\n      onChange={onChange}\n    />\n  );\n};\n\nconst AddNewClientBtn = ({ onClick, text }) => {\n  return (\n    <div className=\"add-new-client-btn\" onClick={onClick}>\n      {text}\n    </div>\n  );\n};\n\nexport default AddClient;\n"]},"metadata":{},"sourceType":"module"}