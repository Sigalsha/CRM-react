{"ast":null,"code":"import _slicedToArray from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sigal/code/projects/CRM-react/client/src/components/analytics/charts/ClientAcquisition.js\";\n\nimport React from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\nimport utils from \"../../../utils/utils\";\nimport { COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/clientAcquisition.css\";\nvar colors = [COLORS[\"brown\"], COLORS[\"yellow\"], COLORS[\"orange\"]];\nvar RADIAN = Math.PI / 180;\n\nvar renderCustomizedLabel = function renderCustomizedLabel(_ref) {\n  var cx = _ref.cx,\n      cy = _ref.cy,\n      midAngle = _ref.midAngle,\n      innerRadius = _ref.innerRadius,\n      outerRadius = _ref.outerRadius,\n      percent = _ref.percent;\n  var radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  var x = cx + radius * Math.cos(-midAngle * RADIAN);\n  var y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/React.createElement(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? \"start\" : \"end\",\n    dominantBaseline: \"central\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n};\n\nvar ClientAcquisition = function ClientAcquisition(_ref2) {\n  var sales = _ref2.sales,\n      salesOf2018 = _ref2.salesOf2018,\n      years = _ref2.years;\n\n  function getLast6MonthsOf2018() {\n    var lastHalfYear = 0;\n\n    for (var i = 5; i < 12; i++) {\n      lastHalfYear += utils.getSalesByMonth(salesOf2018, i);\n    }\n\n    return lastHalfYear;\n  }\n\n  function before2018() {\n    return sales.filter(function (s) {\n      return utils.isFrom2018(s.firstContact, true);\n    });\n  }\n\n  function getSalesData() {\n    var data = [{\n      name: \"last month of 2018\",\n      value: utils.getSalesByMonth(salesOf2018, 11)\n    }, {\n      name: \"last 6 months of 2018\",\n      value: getLast6MonthsOf2018()\n    }, {\n      name: \"before 2018\",\n      value: before2018().length\n    }];\n    return data;\n  }\n\n  function getSalesDataByYears() {\n    var data = [];\n\n    for (var _i = 0, _Object$entries = Object.entries(years); _i < _Object$entries.length; _i++) {\n      var _ref5 = _Object$entries[_i];\n\n      var _ref4 = _slicedToArray(_ref5, 2);\n\n      var key = _ref4[0];\n      var value = _ref4[1];\n      data.push({\n        name: key,\n        value: value\n      });\n    }\n\n    return data;\n  }\n\n  function generatePie(pieData, renderCustomizedLabel) {\n    var _this2 = this;\n\n    return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: 250,\n      height: 250,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PieChart, {\n      fontSize: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: pieData(),\n      cx: \"50%\",\n      cy: \"50%\",\n      labelLine: renderCustomizedLabel ? false : true,\n      label: renderCustomizedLabel ? renderCustomizedLabel : function (name) {\n        return \"\".concat(name.value);\n      },\n      outerRadius: 80,\n      dataKey: \"value\",\n      legendType: \"rect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, pieData().map(function (entry, index) {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: index,\n        fill: colors[index % colors.length],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pies-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"chart-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Client Acquisition\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pie-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, generatePie(getSalesDataByYears, renderCustomizedLabel), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pie-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Sales by Year\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, generatePie(getSalesData), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pie-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Sales comparison\"))));\n};\n\nexport default ClientAcquisition;","map":{"version":3,"sources":["/home/sigal/code/projects/CRM-react/client/src/components/analytics/charts/ClientAcquisition.js"],"names":["React","PieChart","Pie","Cell","Tooltip","ResponsiveContainer","utils","COLORS","colors","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","toFixed","ClientAcquisition","sales","salesOf2018","years","getLast6MonthsOf2018","lastHalfYear","i","getSalesByMonth","before2018","filter","s","isFrom2018","firstContact","getSalesData","data","name","value","length","getSalesDataByYears","Object","entries","key","push","generatePie","pieData","map","entry","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\nimport utils from \"../../../utils/utils\";\nimport { COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/clientAcquisition.css\";\n\nconst colors = [COLORS[\"brown\"], COLORS[\"yellow\"], COLORS[\"orange\"]];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst ClientAcquisition = ({ sales, salesOf2018, years }) => {\n  function getLast6MonthsOf2018() {\n    let lastHalfYear = 0;\n    for (let i = 5; i < 12; i++) {\n      lastHalfYear += utils.getSalesByMonth(salesOf2018, i);\n    }\n    return lastHalfYear;\n  }\n\n  function before2018() {\n    return sales.filter((s) => utils.isFrom2018(s.firstContact, true));\n  }\n\n  function getSalesData() {\n    const data = [\n      {\n        name: \"last month of 2018\",\n        value: utils.getSalesByMonth(salesOf2018, 11),\n      },\n      { name: \"last 6 months of 2018\", value: getLast6MonthsOf2018() },\n      { name: \"before 2018\", value: before2018().length },\n    ];\n\n    return data;\n  }\n\n  function getSalesDataByYears() {\n    const data = [];\n    for (const [key, value] of Object.entries(years)) {\n      data.push({ name: key, value: value });\n    }\n    return data;\n  }\n\n  function generatePie(pieData, renderCustomizedLabel) {\n    return (\n      <ResponsiveContainer width={250} height={250}>\n        <PieChart fontSize={13}>\n          <Pie\n            data={pieData()}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={renderCustomizedLabel ? false : true}\n            label={\n              renderCustomizedLabel\n                ? renderCustomizedLabel\n                : (name) => `${name.value}`\n            }\n            outerRadius={80}\n            dataKey=\"value\"\n            legendType={\"rect\"}\n          >\n            {pieData().map((entry, index) => (\n              <Cell key={index} fill={colors[index % colors.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  return (\n    <div className=\"pies-wrapper\">\n      <h5 className=\"chart-header\">Client Acquisition</h5>\n      <div className=\"pie-wrapper\">\n        <div>\n          {generatePie(getSalesDataByYears, renderCustomizedLabel)}\n          <p className=\"pie-header\">Sales by Year</p>\n        </div>\n        <div>\n          {generatePie(getSalesData)}\n          <p className=\"pie-header\">Sales comparison</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientAcquisition;\n"]},"metadata":{},"sourceType":"module"}