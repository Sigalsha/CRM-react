{"ast":null,"code":"import _objectSpread from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_CLIENTS, CLIENTS_LOADING, LOGIN_FAIL } from \"../actions/types\";\nvar initialState = {\n  clients: [],\n  loading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CLIENTS:\n      return _objectSpread({}, state, {\n        clients: action.payload,\n        loading: false\n      });\n\n    /*  case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter((item) => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }; */\n\n    case CLIENTS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/sigal/code/projects/CRM-react/client/src/reducers/clientsReducer.js"],"names":["GET_CLIENTS","CLIENTS_LOADING","LOGIN_FAIL","initialState","clients","loading","state","action","type","payload"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,UAAvC,QAAyD,kBAAzD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAFlB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,SAAKJ,eAAL;AACE,+BACKK,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOC,KAAP;AAvBJ;AAyBD","sourcesContent":["import { GET_CLIENTS, CLIENTS_LOADING, LOGIN_FAIL } from \"../actions/types\";\n\nconst initialState = {\n  clients: [],\n  loading: false\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CLIENTS:\n      return {\n        ...state,\n        clients: action.payload,\n        loading: false\n      };\n    /*  case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter((item) => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }; */\n    case CLIENTS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}