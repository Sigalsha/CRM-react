{"ast":null,"code":"import _classCallCheck from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sigal/code/projects/CRM-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sigal/code/projects/CRM-react/client/src/components/analytics/charts/SalesByCategory.js\";\nimport React, { Component } from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Text } from \"recharts\";\nimport { SALES_BY_CATEGORY, COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/salesByCategory.css\";\n\nvar SalesByCategory = /*#__PURE__*/function (_Component) {\n  _inherits(SalesByCategory, _Component);\n\n  function SalesByCategory(props) {\n    var _this;\n\n    _classCallCheck(this, SalesByCategory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SalesByCategory).call(this, props));\n\n    _this.handleCategoryChange = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        category: value\n      });\n    };\n\n    _this.generateCategoryData = function () {\n      var category = _this.state.category;\n      var _this$props = _this.props,\n          getSalesByCategory = _this$props.getSalesByCategory,\n          countries = _this$props.countries,\n          owners = _this$props.owners,\n          emailTypes = _this$props.emailTypes,\n          years = _this$props.years;\n\n      switch (category) {\n        case \"country\":\n          return getSalesByCategory(countries);\n\n        case \"owner\":\n          return getSalesByCategory(owners);\n\n        case \"emailType\":\n          return getSalesByCategory(_this._sortEmailTypes(emailTypes));\n\n        case \"year\":\n          return getSalesByCategory(years);\n\n        default:\n          return getSalesByCategory(countries);\n      }\n    };\n\n    _this.generateAreaColor = function () {\n      var category = _this.state.category;\n\n      switch (category) {\n        case \"country\":\n          return COLORS[\"brown\"];\n\n        case \"owner\":\n          return COLORS[\"yellow\"];\n\n        case \"emailType\":\n          return COLORS[\"orange\"];\n\n        case \"year\":\n          return COLORS[\"lightgray\"];\n\n        default:\n          return COLORS[\"lightgray\"];\n      }\n    };\n\n    _this._sortEmailTypes = function (emailTypes) {\n      return Object.keys(emailTypes).sort().reduce(function (obj, key) {\n        obj[key] = emailTypes[key];\n        return obj;\n      }, {});\n    };\n\n    _this.state = {\n      category: \"country\"\n    };\n    return _this;\n  }\n\n  _createClass(SalesByCategory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var category = this.state.category;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"chart-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"Sales by\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"select-category\",\n        value: category,\n        onChange: this.handleCategoryChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, Object.keys(SALES_BY_CATEGORY).map(function (c, i) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: c,\n          key: i,\n          name: c,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, SALES_BY_CATEGORY[c]);\n      }))), /*#__PURE__*/React.createElement(AreaChart, {\n        width: 400,\n        height: 300,\n        data: this.generateCategoryData(),\n        margin: {\n          top: 20,\n          bottom: 5,\n          right: 5,\n          left: 5\n        },\n        fontSize: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        strokeWidth: 2,\n        dot: {\n          fill: COLORS[\"lightgray\"]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        width: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"sales\",\n        stroke: this.generateAreaColor(),\n        fill: this.generateAreaColor(),\n        fillOpacity: 0.8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SalesByCategory;\n}(Component);\n\nexport default SalesByCategory;","map":{"version":3,"sources":["/home/sigal/code/projects/CRM-react/client/src/components/analytics/charts/SalesByCategory.js"],"names":["React","Component","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Text","SALES_BY_CATEGORY","COLORS","SalesByCategory","props","handleCategoryChange","e","value","target","setState","category","generateCategoryData","state","getSalesByCategory","countries","owners","emailTypes","years","_sortEmailTypes","generateAreaColor","Object","keys","sort","reduce","obj","key","map","c","i","top","bottom","right","left","fill"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Text,\n} from \"recharts\";\nimport { SALES_BY_CATEGORY, COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/salesByCategory.css\";\n\nclass SalesByCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: \"country\",\n    };\n  }\n  handleCategoryChange = (e) => {\n    const { value } = e.target;\n    this.setState({ category: value });\n  };\n\n  generateCategoryData = () => {\n    const { category } = this.state;\n    const {\n      getSalesByCategory,\n      countries,\n      owners,\n      emailTypes,\n      years,\n    } = this.props;\n\n    switch (category) {\n      case \"country\":\n        return getSalesByCategory(countries);\n      case \"owner\":\n        return getSalesByCategory(owners);\n      case \"emailType\":\n        return getSalesByCategory(this._sortEmailTypes(emailTypes));\n      case \"year\":\n        return getSalesByCategory(years);\n      default:\n        return getSalesByCategory(countries);\n    }\n  };\n\n  generateAreaColor = () => {\n    const { category } = this.state;\n    switch (category) {\n      case \"country\":\n        return COLORS[\"brown\"];\n      case \"owner\":\n        return COLORS[\"yellow\"];\n      case \"emailType\":\n        return COLORS[\"orange\"];\n      case \"year\":\n        return COLORS[\"lightgray\"];\n      default:\n        return COLORS[\"lightgray\"];\n    }\n  };\n\n  _sortEmailTypes = (emailTypes) => {\n    return Object.keys(emailTypes)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = emailTypes[key];\n        return obj;\n      }, {});\n  };\n\n  render() {\n    const { category } = this.state;\n\n    return (\n      <div className=\"chart-wrapper\">\n        <div className=\"category-header\">\n          <h5 className=\"chart-header\">Sales by</h5>\n          <select\n            className=\"select-category\"\n            value={category}\n            onChange={this.handleCategoryChange}\n          >\n            {Object.keys(SALES_BY_CATEGORY).map((c, i) => {\n              return (\n                <option value={c} key={i} name={c}>\n                  {SALES_BY_CATEGORY[c]}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <AreaChart\n          width={400}\n          height={300}\n          data={this.generateCategoryData()}\n          margin={{ top: 20, bottom: 5, right: 5, left: 5 }}\n          fontSize={12}\n        >\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            strokeWidth={2}\n            dot={{ fill: COLORS[\"lightgray\"] }}\n          />\n          <XAxis dataKey=\"name\">\n            <Text width={12} />\n          </XAxis>\n          <YAxis />\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"sales\"\n            stroke={this.generateAreaColor()}\n            fill={this.generateAreaColor()}\n            fillOpacity={0.8}\n          />\n        </AreaChart>\n      </div>\n    );\n  }\n}\n\nexport default SalesByCategory;\n"]},"metadata":{},"sourceType":"module"}