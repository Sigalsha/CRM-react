{"version":3,"sources":["utils/consts.js","components/general/Navbar.js","components/general/Landing.js","ApiCalls/ApiCalls.js","utils/utils.js","components/clients/ColumnsHeader.js","components/general/Select.js","components/clients/ClientsFilter.js","components/clients/ClientsPagination.js","components/clients/ClientData.js","components/clients/ClientRow.js","components/clients/EditClientPopUp.js","components/clients/Clients.js","components/actions/ClientInput.js","components/actions/UpdateClient.js","components/actions/AddClient.js","components/actions/Actions.js","components/analytics/charts/TopEmployees.js","components/analytics/charts/SalesByMonth.js","components/analytics/charts/ClientAcquisition.js","components/analytics/charts/SalesByCategory.js","components/analytics/Badges.js","components/analytics/Analytics.js","App.js","index.js"],"names":["CLIENTS_HEADERS","name","surname","country","firstContact","emailType","sold","owner","EMAIL_TYPES","IS_SOLD","MONTHS","SALES_BY_CATEGORY","year","COLORS","brown","yellow","orange","lightgray","backgroundGray","cyan","Navbar","react_default","a","createElement","id","Link","to","className","Component","Landing","Landing_LinkContainer","path","text","LinkContainer","_ref","call","apiCalls","_this","this","Object","classCallCheck","getClients","data","clients_data","console","log","length","require","utils","getClientProperty","property","clients","map","c","reduceDuplications","arrArg","filter","elem","pos","arr","indexOf","findClientIndex","client","i","findClientIndexById","_id","isFrom2018","startYear","isBefore","slice","filterSalesByYear","firstContactDate","getSales","clientsToFilter","isSold","getSalesByProperty","key","countSalesByKey","sales","reduce","getTopSalesByKey","salesCounts","maxCount","Math","max","apply","toConsumableArray","values","mostFrequent","keys","k","getSalesByMonth","month","sale","Date","d","getMonth","ColumnsHeader","header","formatHeader","Select","placeholder","onChange","optionList","value","optionlist","defaultValue","option","ClientsFilter","props","possibleConstructorReturn","getPrototypeOf","handleChange","event","updateSelectedFilter","setState","defineProperty","target","state","owners","names","countries","_this$state","ClientsFilter_Filter","labelName","isFilterSelect","Filter","general_Select","ClientsPagination","previousDisplay","pageNum","updateDisplayByPage","currentPage","nextDisplay","handleSinglePageClick","number","prevProps","isPageReset","_this2","pageCount","current","concat","onClick","index_es","icon","faArrowCircleLeft","style","marginRight","ClientsPagination_PageNumbers","pageLimit","faArrowCircleRight","marginLeft","PageNumbers","pageNumbers","ceil","push","handlePageClick","e","Number","num","ClientData","generateClientToEdit","_this$props","toggleEditClient","firstName","split","sureName","_this$props2","fixedName","Fragment","ClientRow","submitInputChange","clients_ClientData","EditClientPopUp","clientToEdit","handleInputChange","_event$target","handleClosePopup","handleSubmit","newObject","_this$state2","type","itemsPerPage","Clients","currentClients","showPopup","arguments","undefined","pageDirection","clientsToDisplay","currentPageDisplay","pageIndex","updateCurrentPageDisplay","updateClientsDisplay","currentFilters","filtered","entries","updatePageCount","filterByProperty","_e$target","filters","objectSpread","_this$state3","filteredClients","_loop","loading","selectValue","setTimeout","localStorage","removeItem","_this$state4","react_loader_spinner_default","color","height","width","clients_ClientsFilter","clients_ClientsPagination","clients_ColumnsHeader","clients_ClientRow","clients_EditClientPopUp","ClientInput","getCurrentClient","list","UpdateClient","handleOwnerChange","newOwner","handleEmailTypeChange","newEmailType","changeOwner","updateClient","changeEmailType","declareSold","alert","UpdateClient_UpdateHeader","UpdateClient_Select","mapList","UpdateClient_UpdateButton","UpdateHeader","_ref2","item","UpdateButton","_ref3","AddClient","checkNewClientDetails","obj","handleAddClient","newClient","addNewClient","AddClient_InputHeader","AddClient_Input","AddClient_AddNewClientBtn","InputHeader","Input","AddNewClientBtn","Actions","clientName","currentClient","newDetail","Actions_ActionHeader","actions_ClientInput","actions_UpdateClient","actions_AddClient","ActionHeader","TopEmployees","getOwners","es6","margin","top","bottom","right","left","fontSize","stroke","dataKey","fill","barSize","position","marginBottom","SalesByMonth","strokeDasharray","strokeWidth","dot","colors","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","ClientAcquisition","salesOf2018","years","getLast6MonthsOf2018","lastHalfYear","generatePie","pieData","labelLine","label","legendType","entry","index","_i","_Object$entries","_ref5","_ref4","slicedToArray","s","SalesByCategory","handleCategoryChange","category","generateCategoryData","getSalesByCategory","emailTypes","_sortEmailTypes","generateAreaColor","sort","fillOpacity","Badges","badges","badge","description","result","Analytics","getBadges","faUsers","faEnvelope","faUserPlus","faGlobeAmericas","getSalesOf2018","getSalesByYear","clientsByCategory","analytics_Badges","charts_TopEmployees","getSalesByClientsCategory","charts_SalesByMonth","charts_SalesByCategory","charts_ClientAcquisition","App","HashRouter","general_Navbar","Route","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"snBAAaA,EAAkB,CAC7BC,KAAM,OACNC,QAAS,OACTC,QAAS,UACTC,aAAc,eACdC,UAAW,YACXC,KAAM,OACNC,MAAO,SAGIC,EAAc,CAAC,IAAK,IAAK,IAAK,IAAK,WAEnCC,EAAU,CAAC,OAAQ,YAEnBC,EAAS,CACpB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGWC,EAAoB,CAC/BR,QAAS,UACTE,UAAW,YACXO,KAAM,OACNL,MAAO,SAGIM,EAAS,CACpBC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,UAAW,YACXC,eAAgB,UAChBC,KAAM,oBCjBOC,2LAnBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACNH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIC,UAAU,YAAvB,QAGAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAWC,UAAU,YAA9B,WAGAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAWC,UAAU,YAA9B,WAGAN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAaC,UAAU,YAAhC,qBAbaC,cCDfC,2LAEF,OACER,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,0CAEFF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACbN,EAAAC,EAAAC,cAACO,EAAD,CAAeC,KAAM,WAAYC,KAAI,YACrCX,EAAAC,EAAAC,cAACO,EAAD,CAAeC,KAAM,WAAYC,KAAI,YACrCX,EAAAC,EAAAC,cAACO,EAAD,CAAeC,KAAM,aAAcC,KAAI,uBAV3BJ,cAiBhBK,EAAgB,SAAAC,GAAoB,IAAjBH,EAAiBG,EAAjBH,KAAMC,EAAWE,EAAXF,KAC7B,OACEX,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIK,EAAMJ,UAAU,eACxBN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAeK,KAKtBH,6CC8CAM,SADF,IApET,SAAAC,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAIdG,WAAa,WACT,IAAIC,EAAOL,EAAKM,aAEhB,OADAC,QAAQC,IAAI,sBAAwBH,EAAKI,QAClCJ,GANPJ,KAAKK,aAAeI,EAAQ,MCqEhCC,EAAQ,qDA1EVC,kBAAoB,SAACC,EAAUC,GAC7B,OAAOA,EAAQC,IAAI,SAACC,GAAD,OAAOA,EAAEH,WAG9BI,mBAAqB,SAACC,GACpB,OAAOA,EAAOC,OAAO,SAACC,EAAMC,EAAKC,GAC/B,OAAOA,EAAIC,QAAQH,KAAUC,UAIjCG,gBAAkB,SAACV,EAASW,GAC1B,IAAK,IAAIC,KAAKZ,EACZ,GAAIA,EAAQY,GAAGD,SAAWA,EACxB,OAAOC,QAKbC,oBAAsB,SAACb,EAAS3B,GAC9B,IAAK,IAAIuC,KAAKZ,EACZ,GAAIA,EAAQY,GAAGE,MAAQzC,EACrB,OAAOuC,EAGX,OAAO,QAGTG,WAAa,SAACC,EAAWC,GACvB,IAAIxD,EAAOuD,EAAUE,MAAM,EAAG,GAC9B,OAAID,EACKxD,EAAO,KAEPA,GAAQ,WAInB0D,kBAAoB,SAACC,EAAkB3D,GACrC,OAAO2D,EAAiBF,MAAM,EAAG,KAAOzD,QAG1C4D,SAAW,SAACC,EAAiBC,GAAlB,OACTD,EAAgBjB,OAAO,SAACH,GAAD,OAAOA,EAAE/C,OAASoE,UAE3CC,mBAAqB,SAACC,EAAKH,GACzB,OAAOpC,EAAKY,kBAAkB2B,EAAK5B,EAAMwB,SAASC,GAAiB,UAGrEI,gBAAkB,SAACC,GACjB,OAAOA,EAAMC,OAAO,SAACzD,EAAG+B,GAEtB,OADA/B,EAAE+B,IAAM/B,EAAE+B,IAAM,GAAK,EACd/B,GACN,UAGL0D,iBAAmB,SAACF,GAClB,IAAIG,EAAc5C,EAAKwC,gBAAgBC,GACvClC,QAAQC,IAAI,gBAAiBoC,GAC7B,IAAIC,EAAWC,KAAKC,IAALC,MAAAF,KAAI5C,OAAA+C,EAAA,EAAA/C,CAAQA,OAAOgD,OAAON,KACrCO,EAAejD,OAAOkD,KAAKR,GAAazB,OAC1C,SAACkC,GAAD,OAAOT,EAAYS,KAAOR,IAG5B,OADAtC,QAAQC,IAAI,iBAAkB2C,GACvBA,QAGTG,gBAAkB,SAACb,EAAOc,GAKxB,OAJmBd,EAAM1B,IAAI,SAACyC,GAC5B,OAAO,IAAIC,KAAKD,EAAKzF,gBAEYoD,OAAO,SAACuC,GAAD,OAAOA,EAAEC,aAAeJ,IAC3C9C,SAMZE,ICjDAiD,iBAxBO,WAWpB,OACE5E,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIC,GAAG,4BACJe,OAAOkD,KAAKzF,GAAiBoD,IAAI,SAAC8C,EAAQnC,GAAT,OAChC1C,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAgBiD,IAAKb,GAd3C,SAAsBmC,GACpB,OAAQA,GACN,IAAK,eACH,MAAO,gBACT,IAAK,YACH,MAAO,aACT,QACE,OAAOA,GAQFC,CAAaD,kBCKXE,iBAtBA,SAAAlE,GAAwD,IAArDmE,EAAqDnE,EAArDmE,YAAaC,EAAwCpE,EAAxCoE,SAAUrG,EAA8BiC,EAA9BjC,KAAMsG,EAAwBrE,EAAxBqE,WAAYC,EAAYtE,EAAZsE,MACzD,OACEnF,EAAAC,EAAAC,cAAA,UACEI,UAAU,WACV1B,KAAMA,EACNuG,MAAOA,EACPF,SAAUA,EACVD,YAAaA,EACbI,WAAYF,GAEZlF,EAAAC,EAAAC,cAAA,UAAQmF,aAAa,OAArB,OACCH,EAAWnD,IAAI,SAACuD,EAAQ5C,GACvB,OACE1C,EAAAC,EAAAC,cAAA,UAAQqD,IAAKb,EAAGyC,MAAOG,GACpBA,QCZPC,cACJ,SAAAA,EAAYC,GAAO,IAAAxE,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAsE,IACjBvE,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAqE,GAAAzE,KAAAG,KAAMuE,KAoBRG,aAAe,SAACC,GACd5E,EAAKwE,MAAMK,qBAAqBD,GAChC5E,EAAK8E,SAAL5E,OAAA6E,EAAA,EAAA7E,CAAA,GAAiB0E,EAAMI,OAAOpH,KAAOgH,EAAMI,OAAOb,SArBlDnE,EAAKiF,MAAQ,CACXC,OAAQvE,EAAMM,mBACZN,EAAMC,kBAAkBjD,EAAe,MAAWqC,EAAKwE,MAAM1D,UAE/DqE,MAAOxE,EAAMC,kBACXjD,EAAe,KACfqC,EAAKwE,MAAM1D,SAEbsE,UAAWzE,EAAMM,mBACfN,EAAMC,kBAAkBjD,EAAe,QAAaqC,EAAKwE,MAAM1D,UAEjE5C,MAAO,GACPD,KAAM,GACNL,KAAM,GACNE,QAAS,GACTE,UAAW,IAjBIgC,wEA0BV,IAAAqF,EAUHpF,KAAKgF,MARPC,EAFKG,EAELH,OACAC,EAHKE,EAGLF,MACAC,EAJKC,EAILD,UACAlH,EALKmH,EAKLnH,MACAF,EANKqH,EAMLrH,UACAJ,EAPKyH,EAOLzH,KACAE,EARKuH,EAQLvH,QACAG,EATKoH,EASLpH,KAGF,OACEe,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACbN,EAAAC,EAAAC,cAACoG,EAAD,CACEC,UAAU,OACVvB,YAAY,OACZE,WAAYiB,EACZhB,MAAOvG,EACPqG,SAAUhE,KAAK0E,aACf/G,KAAK,OACL4H,gBAAc,IAEhBxG,EAAAC,EAAAC,cAACoG,EAAD,CACEC,UAAU,UACVvB,YAAY,UACZE,WAAYkB,EACZjB,MAAOrG,EACPmG,SAAUhE,KAAK0E,aACf/G,KAAK,YAEPoB,EAAAC,EAAAC,cAACoG,EAAD,CACEC,UAAU,aACVvB,YAAY,aACZE,WAAY/F,EACZ8F,SAAUhE,KAAK0E,aACfR,MAAOnG,EACPJ,KAAK,cAEPoB,EAAAC,EAAAC,cAACoG,EAAD,CACEC,UAAU,OACVvB,YAAY,OACZE,WAAY9F,EACZ6F,SAAUhE,KAAK0E,aACfR,MAAOlG,EACPL,KAAK,SAEPoB,EAAAC,EAAAC,cAACoG,EAAD,CACEC,UAAU,QACVvB,YAAY,QACZE,WAAYgB,EACZf,MAAOjG,EACPN,KAAK,QACLqG,SAAUhE,KAAK0E,uBAhFGpF,aAuFtBkG,EAAS,SAAA5F,GAOT,IANJ0F,EAMI1F,EANJ0F,UACArB,EAKIrE,EALJqE,WACAF,EAIInE,EAJJmE,YACAC,EAGIpE,EAHJoE,SACAE,EAEItE,EAFJsE,MACAvG,EACIiC,EADJjC,KAEA,OACEoB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,aAAQqG,EAAR,MACAvG,EAAAC,EAAAC,cAACwG,EAAD,CACExB,WAAYA,EACZF,YAAaA,EACbC,SAAUA,EACVE,MAAOA,EACPvG,KAAMA,MAMC2G,oBC5GToB,sBACJ,SAAAA,EAAYnB,GAAO,IAAAxE,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA0F,IACjB3F,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAyF,GAAA7F,KAAAG,KAAMuE,KAaRoB,gBAAkB,SAACC,GACjB7F,EAAKwE,MAAMsB,qBAAqB,EAAGD,GACnC7F,EAAK8E,SAAS,CAAEiB,YAAaF,KAhBZ7F,EAkBnBgG,YAAc,SAACH,GACb7F,EAAKwE,MAAMsB,oBAAoB,EAAGD,GAClC7F,EAAK8E,SAAS,CAAEiB,YAAaF,KApBZ7F,EAuBnBiG,sBAAwB,SAACC,GAAW,IAC1BH,EAAgB/F,EAAKiF,MAArBc,YACJA,EAAcG,EAChBlG,EAAK4F,gBAAgBM,GACZH,EAAcG,GACvBlG,EAAKgG,YAAYE,IA1BnBlG,EAAKiF,MAAQ,CAAEc,YAAa,GAFX/F,kFAKAmG,GAEflG,KAAKuE,MAAM4B,aACXnG,KAAKuE,MAAM4B,cAAgBD,EAAUC,aAErCnG,KAAK6E,SAAS,CAAEiB,YAAa,qCAsBxB,IAAAM,EAAApG,KACC8F,EAAgB9F,KAAKgF,MAArBc,YACAO,EAAcrG,KAAKuE,MAAnB8B,UACJC,EAAUR,EAEd,OACE/G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACbN,EAAAC,EAAAC,cAAA,QACEI,UAAS,2BAAAkH,OACW,IAAhBT,EAAoB,0BAA4B,cAD3C,gBAGTU,QAAS,kBACPJ,EAAKT,gBAAgBW,EAAU,EAAIA,EAAU,EAAIA,KAGnDvH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CACEC,KAAMC,IACNC,MAAO,CAAEC,YAAa,KAV1B,YAcA9H,EAAAC,EAAAC,cAAC6H,EAAD,CACET,UAAWrG,KAAKuE,MAAM8B,UACtBU,UAAW/G,KAAKuE,MAAMwC,UACtBf,sBAAuBhG,KAAKgG,wBAE9BjH,EAAAC,EAAAC,cAAA,QACEuH,QAAS,kBACPJ,EAAKL,YAAYO,EAAUD,EAAYC,EAAU,EAAIA,IAEvDjH,UAAS,2BAAAkH,OAELT,IAAgBO,EACZ,0BACA,cAJC,iBAJX,OAaEtH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CACEC,KAAMM,IACNJ,MAAO,CAAEK,WAAY,cA1ED3H,cAkF1B4H,EAAc,SAAAtH,GAElB,IAFuE,IAAlDyG,EAAkDzG,EAAlDyG,UAAWL,EAAuCpG,EAAvCoG,sBAAuBe,EAAgBnH,EAAhBmH,UACjDI,EAAc,GACX1F,EAAI,EAAGA,GAAKoB,KAAKuE,KAAKf,GAAY5E,IACzC0F,EAAYE,KAAK5F,GAGnB,SAAS6F,EAAgBC,GACvBvB,EAAsBwB,OAAOD,EAAExC,OAAO7F,KAGxC,OACEH,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBACX8H,EAAYrG,IAAI,SAAC2G,GAChB,OACE1I,EAAAC,EAAAC,cAAA,MACEqD,IAAKmF,EACLvI,GAAIuI,EACJpI,UAAS,8BAAAkH,OAEL1D,KAAKuE,KAAKL,EAAY,MAAQU,EAC1B,sBACA,mBAJC,oBAAAlB,OAOLkB,EAAM5E,KAAKuE,KAAKL,EAAY,IAAM,IAClCU,EAAM5E,KAAKuE,KAAKL,EAAY,IAAM,GAC9B,oBACA,GAVC,kBAaTP,QAASc,GAERG,OAQE/B,IChFAgC,qNA7CbC,qBAAuB,WAAM,IAAAC,EACqB7H,EAAKwE,MAA7CrF,EADmB0I,EACnB1I,GAAIvB,EADeiK,EACfjK,KAAME,EADS+J,EACT/J,SAOlBgK,EAR2BD,EACAC,kBACR,CACjB3I,KACA4I,UAAWnK,EAAKoK,MAAM,KAAK,GAC3BC,SAAUrK,EAAKoK,MAAM,KAAK,GAC1BlK,qFAKK,IAAAoK,EAC+CjI,KAAKuE,MAAnD5G,EADDsK,EACCtK,KAAMI,EADPkK,EACOlK,UAAWC,EADlBiK,EACkBjK,KAAMC,EADxBgK,EACwBhK,MAAOiB,EAD/B+I,EAC+B/I,GAAIrB,EADnCoK,EACmCpK,QACtCqK,EAAYvK,EAAKoK,MAAM,KAAK,GAC5BC,EAAWrK,EAAKoK,MAAM,KAAK,GAC3BjK,EAAekC,KAAKuE,MAAMzG,aAAaiK,MAAM,KAAK,GAEtD,OACEhJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMmJ,SAAP,KACEpJ,EAAAC,EAAAC,cAAA,MACEI,UAAU,gBACVH,GAAIA,EACJsH,QAASxG,KAAK2H,sBAEd5I,EAAAC,EAAAC,cAAA,MAAII,UAAU,WAAW6I,GACzBnJ,EAAAC,EAAAC,cAAA,MAAII,UAAU,WAAW2I,GACzBjJ,EAAAC,EAAAC,cAAA,MAAII,UAAU,WAAWxB,GACzBkB,EAAAC,EAAAC,cAAA,MAAII,UAAU,WAAWvB,GACzBiB,EAAAC,EAAAC,cAAA,MAAII,UAAU,WAAWtB,GACzBgB,EAAAC,EAAAC,cAAA,MAAII,UAAU,WACXrB,EACCe,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,oBAGF,KAGJF,EAAAC,EAAAC,cAAA,MAAII,UAAU,WAAWpB,YAvCVqB,cCwBV8I,EAvBG,SAAAxI,GAAsD,IAAnDiB,EAAmDjB,EAAnDiB,QAA4BgH,GAAuBjI,EAA1CyI,kBAA0CzI,EAAvBiI,kBAC/C,OACE9I,EAAAC,EAAAC,cAAA,aACG4B,GACCA,EAAQC,IAAI,SAACC,GACX,OACEhC,EAAAC,EAAAC,cAACqJ,EAAD,CACEpJ,GAAI6B,EAAEY,IACNW,IAAKvB,EAAEY,IACPhE,KAAMoD,EAAEpD,KACRE,QAASkD,EAAElD,QACXC,aAAciD,EAAEjD,aAChBC,UAAWgD,EAAEhD,UACbC,KAAM+C,EAAE/C,KACRC,MAAO8C,EAAE9C,MACT4J,iBAAkBA,QCiEjBU,qNA/EbvD,MAAQ,CACN9F,GAAIa,EAAKwE,MAAMiE,aAAatJ,GAC5B4I,UAAW/H,EAAKwE,MAAMiE,aAAa7K,KACnCqK,SAAUjI,EAAKwE,MAAMiE,aAAaR,SAClCnK,QAASkC,EAAKwE,MAAMiE,aAAa3K,WAGnC4K,kBAAoB,SAAC9D,GAAU,IAAA+D,EAGzB/D,EADFI,OAAUb,EAFiBwE,EAEjBxE,MAAOvG,EAFU+K,EAEV/K,KAEnBoC,EAAK8E,SAAL5E,OAAA6E,EAAA,EAAA7E,CAAA,GACGtC,EAAOuG,OAIZyE,iBAAmB,WACjB5I,EAAKwE,MAAMsD,sBAGbe,aAAe,WACb,IAAIC,EAAY,GACRR,EAAsBtI,EAAKwE,MAA3B8D,kBAFWjD,EAGwBrF,EAAKiF,MAA1C9F,EAHakG,EAGblG,GAAI4I,EAHS1C,EAGT0C,UAAWE,EAHF5C,EAGE4C,SAAUnK,EAHZuH,EAGYvH,QAC/BgL,EAAU3J,GAAKA,EACf2J,EAAUlL,KAAOmK,EAAY,IAAME,EACnCa,EAAUhL,QAAUA,EAEpBwK,EAAkBQ,4EAGX,IAAAC,EACsC9I,KAAKgF,MAA1C9F,EADD4J,EACC5J,GAAI4I,EADLgB,EACKhB,UAAWE,EADhBc,EACgBd,SAAUnK,EAD1BiL,EAC0BjL,QACzBgK,EAAqB7H,KAAKuE,MAA1BsD,iBACR,OACE9I,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAkBH,GAAIA,GACnCH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWmH,QAASqB,GAAnC,KAGA9I,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEI,UAAU,cACV0J,KAAK,OACLpL,KAAK,YACLuG,MAAO4D,EACP9D,SAAUhE,KAAKyI,qBAGnB1J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEI,UAAU,cACV0J,KAAK,OACLpL,KAAK,WACLuG,MAAO8D,EACPhE,SAAUhE,KAAKyI,qBAGnB1J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACEI,UAAU,cACV0J,KAAK,OACLpL,KAAK,UACLuG,MAAOrG,EACPmG,SAAUhE,KAAKyI,qBAGnB1J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAamH,QAASxG,KAAK4I,cAA1C,mBAvEoBtJ,cCSxB0J,EAAe,GAkRNC,cA/Qb,SAAAA,IAAc,IAAAlJ,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAiJ,IACZlJ,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAgJ,GAAApJ,KAAAG,QAyCFqI,kBAAoB,SAACQ,GAAc,IAC3B3J,EAAsB2J,EAAtB3J,GAAIvB,EAAkBkL,EAAlBlL,KAAME,EAAYgL,EAAZhL,QACVgD,EAAOZ,OAAA+C,EAAA,EAAA/C,CAAOF,EAAKiF,MAAMkE,gBAE3B1H,EAASX,EADDH,EAAMgB,oBAAoBb,EAAS3B,IAE/CsC,EAAO7D,KAAOA,EACd6D,EAAO3D,QAAUA,EACjBkC,EAAK8E,SAAS,CACZqE,eAAgBrI,EAChBsI,WAAYpJ,EAAKiF,MAAMmE,UACvBX,aAAc,CACZtJ,GAAI,KACJvB,KAAM,GACNqK,SAAU,GACVnK,QAAS,OAxDDkC,EA0Ed8H,iBAAmB,WAAmB,IAAlBrG,EAAkB4H,UAAA5I,OAAA,QAAA6I,IAAAD,UAAA,GAAAA,UAAA,GAAT,KACnBD,EAAcpJ,EAAKiF,MAAnBmE,UACRpJ,EAAK8E,SAAS,CACZsE,WAAYA,EACZX,aAAchH,GAAU,CACtBtC,GAAIsC,EAAOtC,GACXvB,KAAM6D,EAAOsG,UACbE,SAAUxG,EAAOwG,SACjBnK,QAAS2D,EAAO3D,YAlFRkC,EAuFd8F,oBAAsB,SAACyD,EAAe1D,GAAY,IAAAR,EACGrF,EAAKiF,MAArCuE,GAD6BnE,EACxC2B,UADwC3B,EAC7BmE,kBAAkBlD,EADWjB,EACXiB,UAEjCmD,EAAqB,GAErBC,EAAY7D,EAAUoD,GAGH,IAAnBM,EACc,IAAZ1D,EACF4D,EAAqBD,EAAiBxH,MAAM,EAAGiH,GAG/CQ,EAAqBzJ,EAAK2J,yBACxBH,EACAP,EACAS,IAKA7D,GAAWS,EACMA,EAAY2C,EAEOA,EAExCQ,EAAqBzJ,EAAK2J,yBACxBH,EACAP,EACAS,IAIJ1J,EAAK8E,SAAS,CACZqE,eAAgBM,EAChBzC,UAAW0C,EACXtD,aAAa,KA3HHpG,EA+Hd2J,yBAA2B,SAACH,EAAkBP,EAAcS,GAC1D,OAAOF,EAAiBxH,MAAM0H,EAAYT,EAAcS,IAhI5C1J,EAmId4J,qBAAuB,WAAM,IAAAb,EACS/I,EAAKiF,MAAjCnE,EADmBiI,EACnBjI,QAAS+I,EADUd,EACVc,eAEbC,EAAW,GAEf,GAA8C,IAA1C5J,OAAO6J,QAAQF,GAAgBpJ,OACjC,OAAOT,EAAK8E,SAAS,CACnB0E,iBAAiBtJ,OAAA+C,EAAA,EAAA/C,CAAKY,GACtBwF,UAAWtG,EAAKgK,gBAAL9J,OAAA+C,EAAA,EAAA/C,CAAyBY,IACpCqI,eAAgBjJ,OAAA+C,EAAA,EAAA/C,CAAIY,GAASkB,MAAM,EAAGiH,KAGxCa,EAAW9J,EAAKiK,mBAGlBjK,EAAK8E,SAAS,CACZ0E,iBAAkBM,EAClBxD,UAAWtG,EAAKgK,gBAAgBF,GAChCX,eAAgBW,EAAS9H,MAAM,EAAGiH,GAClC7C,aAAa,EACbY,UAAW,MAvJDhH,EA2Jd6E,qBAAuB,SAAC2C,GAAM,IACpBqC,EAAmB7J,EAAKiF,MAAxB4E,eADoBK,EAEJ1C,EAAExC,OAAlBb,EAFoB+F,EAEpB/F,MAAOvG,EAFasM,EAEbtM,KACXuM,EAAU,GAEVvM,GAAQuG,IAERgG,EAAQvM,GADI,QAAVuG,EACc,GACE,SAATvG,EACK,SAAVuG,EAKc,cAATvG,GAAkC,YAAVuG,EACjB,KAEAA,GAIpBnE,EAAK8E,SACH,CACE+E,eAAe3J,OAAAkK,EAAA,EAAAlK,CAAA,GAAM2J,EAAmBM,IAE1CnK,EAAK4J,uBApLK5J,EAwLdiK,iBAAmB,WAAM,IAAAI,EACarK,EAAKiF,MAAjCnE,EADeuJ,EACfvJ,QAAS+I,EADMQ,EACNR,eACbS,EAAepK,OAAA+C,EAAA,EAAA/C,CAAOY,GAFHyJ,EAAA,SAIdhI,GACqB,KAAxBsH,EAAetH,KACjB+H,EAAkBA,EAAgBnJ,OAChC,SAACM,GAAD,OAAYA,EAAOc,KAASsH,EAAetH,OAHjD,IAAK,IAAIA,KAAOsH,EAAgBU,EAAvBhI,GAOT,OAAO+H,GAnMKtK,EAsMdgK,gBAAkB,SAAClJ,GACjB,OAAIgC,KAAKuE,KAAKvG,EAAQL,OAASwI,IAAiB,EACvC,EAEAnG,KAAKuE,KAAKvG,EAAQL,OAASwI,IAxMpCjJ,EAAKiF,MAAQ,CACXuF,SAAS,EACTpB,WAAW,EACXX,aAAc,GACd3H,QAAS,GACTwF,UAAW,EACXU,UAAW,GACXyD,YAAa,GACbjB,iBAAkB,GAClBL,eAAgB,GAChBU,eAAgB,IAZN7J,sMA6BZ0K,WAAW,WACT,IAAIrK,EAAOP,EAAKM,aAChBuK,aAAaC,WAAW,kBACxBvE,EAAKvB,SACH,CACE0F,SAAS,EACT1J,QAAST,GAEXgG,EAAKuD,uBAEN,mIAuKI,IAAAiB,EAWH5K,KAAKgF,MATPuF,EAFKK,EAELL,QACA1J,EAHK+J,EAGL/J,QACAkG,EAJK6D,EAIL7D,UACAyD,EALKI,EAKLJ,YACAnE,EANKuE,EAMLvE,UACA6C,EAPK0B,EAOL1B,eACA/C,EARKyE,EAQLzE,YACAgD,EATKyB,EASLzB,UACAX,EAVKoC,EAULpC,aAGF,OAAI+B,EAEAxL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACNH,EAAAC,EAAAC,cAAC4L,EAAA7L,EAAD,CACE+J,KAAK,OACL+B,MAAOvM,EAAM,OACbwM,OAAQ,IACRC,MAAO,OAMbjM,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBACNH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAACgM,EAAD,CACEpK,QAASA,EACT2J,YAAaA,EACb5F,qBAAsB5E,KAAK4E,wBAG/B7F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAACiM,EAAD,CACErF,oBAAqB7F,KAAK6F,oBAC1BkB,UAAWA,EACXV,UAAWA,EACXF,YAAaA,EACbtF,QAASqI,KAGbnK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACkM,EAAD,MACApM,EAAAC,EAAAC,cAACmM,EAAD,CACE/C,kBAAmBrI,KAAKqI,kBACxBxH,QAASqI,EACTrB,iBAAkB7H,KAAK6H,oBAG1BsB,GACCpK,EAAAC,EAAAC,cAACoM,EAAD,CACE7C,aAAcA,EACdX,iBAAkB7H,KAAK6H,iBACvBQ,kBAAmBrI,KAAKqI,6BAvQhB/I,aCiBPgM,4NA3Bb5G,aAAe,SAACC,GACd5E,EAAKwE,MAAMgH,iBAAiB5G,4EAGrB,IACC9D,EAAYb,KAAKuE,MAAjB1D,QAER,OACE9B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBAAf,WACAN,EAAAC,EAAAC,cAAA,SACEI,UAAU,oBACV0J,KAAK,OACLyC,KAAK,UACLzH,YAAY,cACZC,SAAUhE,KAAK0E,eAEjB3F,EAAAC,EAAAC,cAAA,YAAUC,GAAG,WACV2B,EAAQC,IAAI,SAACU,GAAD,OACXzC,EAAAC,EAAAC,cAAA,UAAQiF,MAAO1C,EAAO7D,KAAM2E,IAAKd,EAAOG,iBApB1BrC,cCApBmM,sBACJ,SAAAA,EAAYlH,GAAO,IAAAxE,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAyL,IACjB1L,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAwL,GAAA5L,KAAAG,KAAMuE,KAURmH,kBAAoB,SAAC/G,GACnB5E,EAAK8E,SAAS,CACZ8G,SAAUhH,EAAMI,OAAOb,SAbRnE,EAiBnB6L,sBAAwB,SAACjH,GACvB5E,EAAK8E,SAAS,CACZgH,aAAclH,EAAMI,OAAOb,SAnBZnE,EAuBnB+L,YAAc,WACZ/L,EAAKwE,MAAMwH,aAAahM,EAAKiF,MAAM2G,WAxBlB5L,EA2BnBiM,gBAAkB,WAChBjM,EAAKwE,MAAMwH,aAAahM,EAAKiF,MAAM6G,eA5BlB9L,EA+BnBkM,YAAc,WACRlM,EAAKiF,MAAMhH,KACbkO,MAAM,8BAENnM,EAAK8E,SACH,CACE7G,MAAM,GAER,kBAAM+B,EAAKwE,MAAMwH,aAAahM,EAAKiF,MAAMhH,SArC7C+B,EAAKiF,MAAQ,CACXC,OAAQlF,EAAKwE,MAAMU,OACnBlH,UAAWgC,EAAKwE,MAAMxG,UACtB4N,SAAU,GACVE,aAAc,GACd7N,MAAM,GAPS+B,wEA4CV,IAAAqF,EACuBpF,KAAKgF,MAA3BC,EADDG,EACCH,OAAQlH,EADTqH,EACSrH,UAEhB,OACEgB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACbN,EAAAC,EAAAC,cAACkN,EAAD,CAAczM,KAAM,2BACpBX,EAAAC,EAAAC,cAACmN,GAAD,CACEZ,KAAMvG,EACNlB,YAAY,QACZC,SAAUhE,KAAK0L,kBACfxM,GAAI+F,EACJoH,QAASpH,IAEXlG,EAAAC,EAAAC,cAACqN,GAAD,CAAc9F,QAASxG,KAAK8L,YAAapM,KAAM,aAE/CX,EAAAC,EAAAC,cAACkN,EAAD,CAAczM,KAAM,gBACpBX,EAAAC,EAAAC,cAACmN,GAAD,CACEZ,KAAMzN,EACNgG,YAAahG,EACbiG,SAAUhE,KAAK4L,sBACf1M,GAAInB,EACJsO,QAAStO,IAEXgB,EAAAC,EAAAC,cAACqN,GAAD,CAAc9F,QAASxG,KAAKgM,gBAAiBtM,KAAM,SAEnDX,EAAAC,EAAAC,cAACkN,EAAD,CAAczM,KAAM,kBACpBX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACfN,EAAAC,EAAAC,cAACqN,GAAD,CACE9F,QAASxG,KAAKiM,YACdvM,KAAM,UACNR,GAAG,uBA3EcI,cAkFrBiN,EAAe,SAAA3M,GAAc,IAAXF,EAAWE,EAAXF,KACtB,OAAOX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBAAiBK,IAGnCoE,GAAS,SAAA0I,GAAkD,IAA/ChB,EAA+CgB,EAA/ChB,KAAMzH,EAAyCyI,EAAzCzI,YAAaC,EAA4BwI,EAA5BxI,SAAU9E,EAAkBsN,EAAlBtN,GAAImN,EAAcG,EAAdH,QACjD,OACEtN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,SACEI,UAAU,aACV0J,KAAK,OACLyC,KAAMA,EACNzH,YAAaA,EACbC,SAAUA,IAEZjF,EAAAC,EAAAC,cAAA,YAAUC,GAAIA,GACXmN,EAAQvL,IAAI,SAAC2L,GAAD,OACX1N,EAAAC,EAAAC,cAAA,UAAQiF,MAAOuI,EAAMnK,IAAKmK,SAO9BC,GAAe,SAAAC,GAAuB,IAApBnG,EAAoBmG,EAApBnG,QAAS9G,EAAWiN,EAAXjN,KAC/B,OACEX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAYmH,QAASA,GACjC9G,IAKQ+L,KCjHTmB,uBACJ,SAAAA,IAAc,IAAA7M,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA4M,IACZ7M,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAA2M,GAAA/M,KAAAG,QASFyI,kBAAoB,SAAC9D,GAAU,IAAA+D,EAGzB/D,EADFI,OAAUb,EAFiBwE,EAEjBxE,MAAOvG,EAFU+K,EAEV/K,KAGnBoC,EAAK8E,SAAL5E,OAAA6E,EAAA,EAAA7E,CAAA,GACGtC,EAAOuG,KAhBEnE,EAoBd8M,sBAAwB,SAACC,GACvB,IAAK,IAAIxK,KAAOwK,EACd,GAAiB,KAAbA,EAAIxK,GACN,OAAO,GAvBCvC,EA6BdgN,gBAAkB,WAChB,IAAIC,EAAY,GADM5H,EAEwBrF,EAAKiF,MAA7C8C,EAFgB1C,EAEhB0C,UAAWE,EAFK5C,EAEL4C,SAAUnK,EAFLuH,EAEKvH,QAASI,EAFdmH,EAEcnH,MACpC+O,EAAUrP,KAAOmK,EAAY,IAAME,EACnCgF,EAAUnP,QAAUA,EACpBmP,EAAU/O,MAAQA,GAC4B,IAA1C8B,EAAK8M,sBAAsBG,GAC7Bd,MAAM,yCAENnM,EAAKwE,MAAM0I,aAAaD,GACxBjN,EAAK8E,SAAS,CACZiD,UAAW,GACXE,SAAU,GACVnK,QAAS,GACTI,MAAO,OAzCX8B,EAAKiF,MAAQ,CACX8C,UAAW,GACXE,SAAU,GACVnK,QAAS,GACTI,MAAO,IANG8B,wEAgDL,IAAA+I,EACuC9I,KAAKgF,MAA7C8C,EADCgB,EACDhB,UAAWE,EADVc,EACUd,SAAUnK,EADpBiL,EACoBjL,QAASI,EAD7B6K,EAC6B7K,MACpC,OACEc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACbN,EAAAC,EAAAC,cAACiO,GAAD,CAAaxN,KAAM,gBACnBX,EAAAC,EAAAC,cAACkO,GAAD,CACExP,KAAM,YACNuG,MAAO4D,EACP9D,SAAUhE,KAAKyI,oBAEjB1J,EAAAC,EAAAC,cAACiO,GAAD,CAAaxN,KAAM,aACnBX,EAAAC,EAAAC,cAACkO,GAAD,CACExP,KAAM,WACNuG,MAAO8D,EACPhE,SAAUhE,KAAKyI,oBAEjB1J,EAAAC,EAAAC,cAACiO,GAAD,CAAaxN,KAAM,aACnBX,EAAAC,EAAAC,cAACkO,GAAD,CACExP,KAAM,UACNuG,MAAOrG,EACPmG,SAAUhE,KAAKyI,oBAEjB1J,EAAAC,EAAAC,cAACiO,GAAD,CAAaxN,KAAM,WACnBX,EAAAC,EAAAC,cAACkO,GAAD,CAAOxP,KAAM,QAASuG,MAAOjG,EAAO+F,SAAUhE,KAAKyI,oBACnD1J,EAAAC,EAAAC,cAACmO,GAAD,CACE5G,QAASxG,KAAK+M,gBACdrN,KAAM,2BA3EQJ,cAkFlB+N,GAAc,SAAAzN,GAAc,IAAXF,EAAWE,EAAXF,KACrB,OAAOX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBAAgBK,IAGlC4N,GAAQ,SAAAd,GAA+B,IAA5B7O,EAA4B6O,EAA5B7O,KAAMuG,EAAsBsI,EAAtBtI,MAAOF,EAAewI,EAAfxI,SAC5B,OACEjF,EAAAC,EAAAC,cAAA,SACEI,UAAU,mBACV0J,KAAK,OACLpL,KAAMA,EACNuG,MAAOA,EACPF,SAAUA,KAKVuJ,GAAkB,SAAAZ,GAAuB,IAApBnG,EAAoBmG,EAApBnG,QAAS9G,EAAWiN,EAAXjN,KAClC,OACEX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBAAqBmH,QAASA,GAC1C9G,IAKQkN,MCpGTY,eACJ,SAAAA,IAAc,IAAAzN,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAwN,IACZzN,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAuN,GAAA3N,KAAAG,QAmCFuL,iBAAmB,SAAC5G,GAClB,IAAI8I,EAAa9I,EAAMI,OAAOb,MAE1B1C,EADSvB,OAAA+C,EAAA,EAAA/C,CAAOF,EAAKiF,MAAMnE,SACVK,OAAO,SAACH,GAAD,OAAO0M,IAAe1M,EAAEpD,OAEhD6D,EAAO,IACTzB,EAAK8E,SAAS,CAAE6I,cAAelM,KA1CrBzB,EA6DdgM,aAAe,SAAC4B,GACY5N,EAAKiF,MAAvB0I,eA9DI3N,EAgFdkN,aAAe,SAACD,GAoBd,IAAMnM,EAAOZ,OAAA+C,EAAA,EAAA/C,CAAOF,EAAKiF,MAAMnE,SAC/BA,EAAQwG,KAAK2F,GACbjN,EAAK8E,SACH,CACEhE,QAASA,GAEX,kBAAMqL,MAAK,GAAA3F,OAAI1F,EAAQA,EAAQL,OAAS,GAAG7C,KAAhC,uBAxGboC,EAAKiF,MAAQ,CACXuF,SAAS,EACTxM,UAAW,CAAC,IAAK,IAAK,IAAK,KAC3BkH,OAAQ,GACRyI,cAAe,IANL3N,mFAsBM,IAAAqG,EAAApG,KAClByK,WAAW,WACT,IAAIrK,EAAOP,EAAKM,aAChBiG,EAAKvB,SAAS,CACZ0F,SAAS,EACT1J,QAAST,EACT6E,OAAQvE,EAAMM,mBACZN,EAAMC,kBAAkBjD,EAAe,MAAW0C,IAEpDsN,cAAe,MAEhB,sCA6EI,IAAAtI,EACyCpF,KAAKgF,MAA7CuF,EADDnF,EACCmF,QAAS1J,EADVuE,EACUvE,QAASoE,EADnBG,EACmBH,OAAQlH,EAD3BqH,EAC2BrH,UAClC,OAAIwM,EAEAxL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACNH,EAAAC,EAAAC,cAAC4L,EAAA7L,EAAD,CACE+J,KAAK,OACL+B,MAAOvM,EAAM,OACbwM,OAAQ,IACRC,MAAO,OAMbjM,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBACNH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAC2O,GAAD,CAAclO,KAAM,YAEtBX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAC4O,EAAD,CACEhN,QAASA,EACT0K,iBAAkBvL,KAAKuL,oBAG3BxM,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAC6O,GAAD,CACE7I,OAAQA,EACRlH,UAAWA,EACXgO,aAAc/L,KAAK+L,gBAGvBhN,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACRH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAC2O,GAAD,CAAclO,KAAM,gBAEtBX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAC8O,GAAD,CAAWd,aAAcjN,KAAKiN,wBApJlB3N,aA2JhB0O,GAAe,SAAApO,GAAc,IAAXF,EAAWE,EAAXF,KACtB,OAAOX,EAAAC,EAAAC,cAAA,MAAII,UAAU,kBAAkBK,IAG1B8N,+BC1HAS,GA/BM,SAAArO,GAA2B,IAAxBqF,EAAwBrF,EAAxBqF,OAAQiJ,EAAgBtO,EAAhBsO,UAC9B,OACEnP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,iBACAN,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACEnD,MAAO,IACPD,OAAQ,IACR3K,KAAM8N,EAAUjJ,GAChBmJ,OAAQ,CAAEC,IAAK,GAAIC,OAAQ,EAAGC,MAAO,EAAGC,KAAM,GAC9CC,SAAU,IAEV1P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAeO,OAAQnQ,EAAM,iBAC7BQ,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAOQ,QAAQ,QACb5P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAMnD,MAAO,MAEfjM,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAKQ,QAAQ,QAAQC,KAAMrQ,EAAM,OAAYsQ,QAAS,IACpD9P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACEQ,QAAQ,OACRG,SAAS,MACTL,SAAU,GACVM,aAAc,SCkBXC,GAzCM,SAAApP,GAAe,IAAZ4C,EAAY5C,EAAZ4C,MAYtB,OACEzD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,yBACAN,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACEnD,MAAO,IACPD,OAAQ,IACR3K,KAjBN,WAEE,IADA,IAAMA,EAAO,GACJqB,EAAI,EAAGA,EAAI,GAAIA,IACtBrB,EAAKiH,KAAK,CACR1J,KAAMS,EAAOqD,GACbe,MAAO9B,EAAM2C,gBAAgBb,EAAOf,KAGxC,OAAOrB,EASGiD,GACN+K,OAAQ,CAAEC,IAAK,GAAIC,OAAQ,EAAGC,MAAO,EAAGC,KAAM,GAC9CC,SAAU,IAEV1P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAec,gBAAgB,QAC/BlQ,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAOQ,QAAQ,QACb5P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAMnD,MAAO,MAEfjM,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACEpF,KAAK,WACL4F,QAAQ,QACRD,OAAQnQ,EAAM,OACd2Q,YAAa,EACbC,IAAK,CAAEP,KAAMrQ,EAAM,gBC1CvB6Q,WAAS,CAAC7Q,EAAM,MAAWA,EAAM,OAAYA,EAAM,SAEnD8Q,GAASxM,KAAKyM,GAAK,IACnBC,GAAwB,SAAA3P,GAOxB,IANJ4P,EAMI5P,EANJ4P,GACAC,EAKI7P,EALJ6P,GACAC,EAII9P,EAJJ8P,SACAC,EAGI/P,EAHJ+P,YACAC,EAEIhQ,EAFJgQ,YACAC,EACIjQ,EADJiQ,QAEMC,EAASH,EAA4C,IAA7BC,EAAcD,GACtCI,EAAIP,EAAKM,EAASjN,KAAKmN,KAAKN,EAAWL,IACvCY,EAAIR,EAAKK,EAASjN,KAAKqN,KAAKR,EAAWL,IAE7C,OACEtQ,EAAAC,EAAAC,cAAA,QACE8Q,EAAGA,EACHE,EAAGA,EACHrB,KAAK,QACLuB,WAAYJ,EAAIP,EAAK,QAAU,MAC/BY,iBAAiB,WALnB,GAAA7J,QAOiB,IAAVsJ,GAAeQ,QAAQ,GAP9B,OA2FWC,GA/EW,SAAA9D,GAAmC,IAAhChK,EAAgCgK,EAAhChK,MAAO+N,EAAyB/D,EAAzB+D,YAAaC,EAAYhE,EAAZgE,MAC/C,SAASC,IAEP,IADA,IAAIC,EAAe,EACVjP,EAAI,EAAGA,EAAI,GAAIA,IACtBiP,GAAgBhQ,EAAM2C,gBAAgBkN,EAAa9O,GAErD,OAAOiP,EA4BT,SAASC,EAAYC,EAASrB,GAC5B,OACExQ,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAqBnD,MAAO,IAAKD,OAAQ,KACvChM,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAUM,SAAU,IAClB1P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACE/N,KAAMwQ,IACNpB,GAAG,MACHC,GAAG,MACHoB,WAAWtB,EACXuB,MACEvB,GAEI,SAAC5R,GAAD,SAAA4I,OAAa5I,EAAKuG,QAExB0L,YAAa,GACbjB,QAAQ,QACRoC,WAAY,QAEXH,IAAU9P,IAAI,SAACkQ,EAAOC,GAAR,OACblS,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAM7L,IAAK2O,EAAOrC,KAAMQ,GAAO6B,EAAQ7B,GAAO5O,aAGlDzB,EAAAC,EAAAC,cAACkP,GAAA,EAAD,QAMR,OACEpP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,sBACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAA,WACG0R,EAzCT,WAEE,IADA,IAAMvQ,EAAO,GACb8Q,EAAA,EAAAC,EAA2BlR,OAAO6J,QAAQ0G,GAA1CU,EAAAC,EAAA3Q,OAAA0Q,IAAkD,KAAAE,EAAAD,EAAAD,GAAAG,EAAApR,OAAAqR,GAAA,EAAArR,CAAAmR,EAAA,GAAtC9O,EAAsC+O,EAAA,GAAjCnN,EAAiCmN,EAAA,GAChDjR,EAAKiH,KAAK,CAAE1J,KAAM2E,EAAK4B,MAAOA,IAEhC,OAAO9D,GAoCiCmP,IAClCxQ,EAAAC,EAAAC,cAAA,KAAGI,UAAU,cAAb,kBAEFN,EAAAC,EAAAC,cAAA,WACG0R,EA1DT,WAUE,MATa,CACX,CACEhT,KAAM,qBACNuG,MAAOxD,EAAM2C,gBAAgBkN,EAAa,KAE5C,CAAE5S,KAAM,wBAAyBuG,MAAOuM,KACxC,CAAE9S,KAAM,cAAeuG,MAVlB1B,EAAMtB,OAAO,SAACqQ,GAAD,OAAO7Q,EAAMkB,WAAW2P,EAAEzT,cAAc,KAUf0C,WAoDvCzB,EAAAC,EAAAC,cAAA,KAAGI,UAAU,cAAb,wBCmBKmS,uBA/Gb,SAAAA,EAAYjN,GAAO,IAAAxE,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAwR,IACjBzR,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAuR,GAAA3R,KAAAG,KAAMuE,KAKRkN,qBAAuB,SAAClK,GAAM,IACpBrD,EAAUqD,EAAExC,OAAZb,MACRnE,EAAK8E,SAAS,CAAE6M,SAAUxN,KARTnE,EAWnB4R,qBAAuB,WAAM,IACnBD,EAAa3R,EAAKiF,MAAlB0M,SADmB9J,EAQvB7H,EAAKwE,MALPqN,EAHyBhK,EAGzBgK,mBACAzM,EAJyByC,EAIzBzC,UACAF,EALyB2C,EAKzB3C,OACA4M,EANyBjK,EAMzBiK,WACArB,EAPyB5I,EAOzB4I,MAGF,OAAQkB,GACN,IAAK,UACH,OAAOE,EAAmBzM,GAC5B,IAAK,QACH,OAAOyM,EAAmB3M,GAC5B,IAAK,YACH,OAAO2M,EAAmB7R,EAAK+R,gBAAgBD,IACjD,IAAK,OACH,OAAOD,EAAmBpB,GAC5B,QACE,OAAOoB,EAAmBzM,KA/BbpF,EAmCnBgS,kBAAoB,WAElB,OADqBhS,EAAKiF,MAAlB0M,UAEN,IAAK,UACH,OAAOnT,EAAM,MACf,IAAK,QACH,OAAOA,EAAM,OACf,IAAK,YACH,OAAOA,EAAM,OACf,IAAK,OAEL,QACE,OAAOA,EAAM,YA/CAwB,EAmDnB+R,gBAAkB,SAACD,GACjB,OAAO5R,OAAOkD,KAAK0O,GAChBG,OACAvP,OAAO,SAACqK,EAAKxK,GAEZ,OADAwK,EAAIxK,GAAOuP,EAAWvP,GACfwK,GACN,KAvDL/M,EAAKiF,MAAQ,CACX0M,SAAU,WAHK3R,wEA4DV,IACC2R,EAAa1R,KAAKgF,MAAlB0M,SAER,OACE3S,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,YACAN,EAAAC,EAAAC,cAAA,UACEI,UAAU,kBACV6E,MAAOwN,EACP1N,SAAUhE,KAAKyR,sBAEdxR,OAAOkD,KAAK9E,GAAmByC,IAAI,SAACC,EAAGU,GACtC,OACE1C,EAAAC,EAAAC,cAAA,UAAQiF,MAAOnD,EAAGuB,IAAKb,EAAG9D,KAAMoD,GAC7B1C,EAAkB0C,QAM7BhC,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACEnD,MAAO,IACPD,OAAQ,IACR3K,KAAMJ,KAAK2R,uBACXvD,OAAQ,CAAEC,IAAK,GAAIC,OAAQ,EAAGC,MAAO,EAAGC,KAAM,GAC9CC,SAAU,IAEV1P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACEc,gBAAgB,MAChBC,YAAa,EACbC,IAAK,CAAEP,KAAMrQ,EAAM,aAErBQ,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAOQ,QAAQ,QACb5P,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CAAMnD,MAAO,MAEfjM,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,MACApP,EAAAC,EAAAC,cAACkP,GAAA,EAAD,CACEpF,KAAK,WACL4F,QAAQ,QACRD,OAAQ1O,KAAK+R,oBACbnD,KAAM5O,KAAK+R,oBACXE,YAAa,cAxGK3S,cCiBf4S,WA3BA,SAAAtS,GAAgB,IAAbuS,EAAavS,EAAbuS,OAChB,OACEpT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACZ8S,EAAOrR,IAAI,SAACsR,GACX,OACErT,EAAAC,EAAAC,cAAA,OACEI,UAAU,QACViD,IAAK8P,EAAMlT,GACXvB,KAAMyU,EAAMzU,KACZ+I,KAAM0L,EAAM1L,KACZ9C,OAAQwO,EAAMxO,OACdyO,YAAaD,EAAMC,aAEnBtT,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAiBC,KAAM0L,EAAM1L,KAAMrH,UAAU,eAC7CN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,8BACV+S,EAAMxO,OACP7E,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAiB+S,EAAMC,cAEzCtT,EAAAC,EAAAC,cAAA,KAAGI,UAAU,cAAc+S,EAAMC,aACjCtT,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAgB+S,EAAME,cCkIjCC,eAvIb,SAAAA,IAAc,IAAAxS,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAuS,IACZxS,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAsS,GAAA1S,KAAAG,QAiBFwS,UAAY,WAAM,IACR3R,EAAYd,EAAKiF,MAAjBnE,QACR,MAAO,CACL,CACE3B,GAAI,EACJvB,KAAM,kBACN+I,KAAM+L,IACN7O,OAAQ,oBACRyO,YAAa,iCACbC,OAAQzR,EAAQK,OAAO,SAACH,GAAD,OAAOL,EAAMkB,WAAWb,EAAEjD,cAAc,KAC5D0C,QAEL,CACEtB,GAAI,EACJvB,KAAM,aACN+I,KAAMgM,IACN9O,OAAQ,cACRyO,YAAa,iCACbC,OAAQzR,EAAQK,OAAO,SAACH,GAAD,OAAuB,OAAhBA,EAAEhD,YAAoByC,QAEtD,CACEtB,GAAI,EACJvB,KAAM,gBACN+I,KAAMiM,IACN/O,OAAQ,iBACRyO,YAAa,8BACbC,OAAQ5R,EAAMwB,SAASrB,GAAS,GAAOL,QAEzC,CACEtB,GAAI,EACJvB,KAAM,iBACN+I,KAAMkM,IACNhP,OAAQ,kBACRyO,YAAa,6BACbC,OAAQ5R,EAAMgC,iBACZhC,EAAM2B,mBAAmB,UAAWxB,OArD9Bd,EA2Dd8S,eAAiB,WAAM,IACbhS,EAAYd,EAAKiF,MAAjBnE,QACR,OAAOH,EACJwB,SAASrB,GAAS,GAClBK,OAAO,SAACH,GAAD,OAAOL,EAAMkB,WAAWb,EAAEjD,cAAc,MA/DtCiC,EAkEd+S,eAAiB,WAAM,IACbjS,EAAYd,EAAKiF,MAAjBnE,QACR,OAAOH,EAAMwB,SAASrB,GAAS,GAAMC,IAAI,SAACC,GAAD,OAAOA,EAAEjD,aAAaiE,MAAM,EAAG,MAlExEhC,EAAKiF,MAAQ,CACXuF,SAAS,GAHCxK,mFAOM,IAAAqG,EAAApG,KAElByK,WAAW,WACT,IAAIrK,EAAOP,EAAKM,aAChBiG,EAAKvB,SAAS,CACZ0F,SAAS,EACT1J,QAAST,KAEV,uDAwDqB2S,GAExB,IADA,IAAM3S,EAAO,GACb8Q,EAAA,EAAAC,EAA2BlR,OAAO6J,QAAQiJ,GAA1C7B,EAAAC,EAAA3Q,OAAA0Q,IAA8D,KAAAvE,EAAAwE,EAAAD,GAAA1E,EAAAvM,OAAAqR,GAAA,EAAArR,CAAA0M,EAAA,GAAlDrK,EAAkDkK,EAAA,GAA7CtI,EAA6CsI,EAAA,GAC5DpM,EAAKiH,KAAK,CACR1J,KAAM2E,EACNE,MAAO0B,IAGX,OAAO9D,mCAGA,IAAAgF,EACsBpF,KAAKgF,MAA1BuF,EADDnF,EACCmF,QAAS1J,EADVuE,EACUvE,QAEjB,OAAI0J,EAEAxL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACNH,EAAAC,EAAAC,cAAC4L,EAAA7L,EAAD,CACE+J,KAAK,OACL+B,MAAOvM,EAAM,OACbwM,OAAQ,IACRC,MAAO,OAObjM,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBACNH,EAAAC,EAAAC,cAAC+T,GAAD,CAAQb,OAAQnS,KAAKwS,cACrBzT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAACgU,GAAD,CACEhO,OAAQvE,EAAM6B,gBACZ7B,EAAM2B,mBAAmB,QAASxB,IAEpCqN,UAAWlO,KAAKkT,4BAElBnU,EAAAC,EAAAC,cAACkU,GAAD,CAAc3Q,MAAOxC,KAAK6S,mBAC1B9T,EAAAC,EAAAC,cAACmU,GAAD,CACEvS,QAASA,EACToE,OAAQvE,EAAM6B,gBACZ7B,EAAM2B,mBAAmB,QAASxB,IAEpC+Q,mBAAoB5R,KAAKkT,0BACzB/N,UAAWzE,EAAM6B,gBACf7B,EAAM2B,mBAAmB,UAAWxB,IAEtCgR,WAAYnR,EAAM6B,gBAChB7B,EAAM2B,mBAAmB,YAAaxB,IAExC2P,MAAO9P,EAAM6B,gBAAgBvC,KAAK8S,oBAEpC/T,EAAAC,EAAAC,cAACoU,GAAD,CACE7Q,MAAO9B,EAAMwB,SAASrB,GAAS,GAC/B0P,YAAavQ,KAAK6S,iBAClBrC,MAAO9P,EAAM6B,gBAAgBvC,KAAK8S,kBAClClB,mBAAoB5R,KAAKkT,qCAhIb5T,aC4DTgU,uBAlEb,SAAAA,IAAc,IAAAvT,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAsT,IACZvT,EAAAE,OAAAuE,EAAA,EAAAvE,CAAAD,KAAAC,OAAAwE,EAAA,EAAAxE,CAAAqT,GAAAzT,KAAAG,QACKgF,MAAQ,CACXuF,SAAS,GAHCxK,mFAOM,IAAAqG,EAAApG,KAClByK,WAAW,kBAAMrE,EAAKvB,SAAS,CAAE0F,SAAS,KAAU,sCA2BpD,OAFoBvK,KAAKgF,MAAjBuF,QAIJxL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACNH,EAAAC,EAAAC,cAAC4L,EAAA7L,EAAD,CACE+J,KAAK,OACL+B,MAAOvM,EAAM,OACbwM,OAAQ,IACRC,MAAO,OAObjM,EAAAC,EAAAC,cAACsU,EAAA,EAAD,KACExU,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAACuU,EAAD,OAEFzU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwU,EAAA,EAAD,CAAOhU,KAAK,IAAIiU,OAAK,EAACC,UAAWpU,IACjCR,EAAAC,EAAAC,cAACwU,EAAA,EAAD,CAAOhU,KAAK,WAAWiU,OAAK,EAACC,UAAW1K,IACxClK,EAAAC,EAAAC,cAACwU,EAAA,EAAD,CAAOhU,KAAK,WAAWiU,OAAK,EAACC,UAAWnG,KACxCzO,EAAAC,EAAAC,cAACwU,EAAA,EAAD,CAAOhU,KAAK,aAAaiU,OAAK,EAACC,UAAWpB,eA3DpCjT,qBCJlBsU,IAASC,OAAO9U,EAAAC,EAAAC,cAAC6U,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.c1a450ce.chunk.js","sourcesContent":["export const CLIENTS_HEADERS = {\n  name: \"name\",\n  surname: \"name\",\n  country: \"country\",\n  firstContact: \"firstContact\",\n  emailType: \"emailType\",\n  sold: \"sold\",\n  owner: \"owner\",\n};\n\nexport const EMAIL_TYPES = [\"A\", \"B\", \"C\", \"D\", \"No Type\"];\n\nexport const IS_SOLD = [\"Sold\", \"Not sold\"];\n\nexport const MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const SALES_BY_CATEGORY = {\n  country: \"Country\",\n  emailType: \"EmailType\",\n  year: \"Year\",\n  owner: \"Owner\",\n};\n\nexport const COLORS = {\n  brown: \"#795548\",\n  yellow: \"#f7ce3e\",\n  orange: \"#ff884b\",\n  lightgray: \"lightgray\",\n  backgroundGray: \"#f5f5f5\",\n  cyan: \"#00bfff\",\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../styles/general/navbar.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div id=\"navbar-container\">\n        <Link to=\"/\" className=\"nav-link\">\n          Home\n        </Link>\n        <Link to=\"/clients\" className=\"nav-link\">\n          Clients\n        </Link>\n        <Link to=\"/actions\" className=\"nav-link\">\n          Actions\n        </Link>\n        <Link to=\"/analytics\" className=\"nav-link\">\n          Analytics\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../styles/general/landing.css\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"landing-container\">\n        <div className=\"landing-header\">\n          <span>CRM - manage your success</span>\n        </div>\n        <div className=\"landing-links-wrapper\">\n          <LinkContainer path={\"/clients\"} text={`Clients`} />\n          <LinkContainer path={\"/actions\"} text={`Actions`} />\n          <LinkContainer path={\"/analytics\"} text={`Analytics`} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst LinkContainer = ({ path, text }) => {\n  return (\n    <Link to={path} className=\"link-square\">\n      <span className=\"single-link\">{text}</span>\n    </Link>\n  );\n};\n\nexport default Landing;\n","// import axios from 'axios';\nimport '../data.json'\n\n\nclass apiCalls {\n    constructor() {\n        this.clients_data = require('../data.json');\n    }\n\n    getClients = () => {\n        let data = this.clients_data;\n        console.log(\"data sent from Api \" + data.length)\n        return data;\n    }\n\n\n    // getUser = (userName) => {\n    //     let data = this.users_data\n    //     console.log(data)\n\n    //     let user = this.findUserByUserName(data, userName)\n    //     console.log(\"user found in ApiCalls: \" + user)\n\n    //     return user;\n    // }\n\n    // findUserByUserName = (data, userName) => {\n    //     for (let u in data) {\n    //         if (data[u].userName === userName) {\n    //             return data[u]\n    //         }\n    //     }\n    // }\n\n    // getMoviesFromApi = async (pageNumber) => {\n    //     let page;\n    //     if (pageNumber) {\n    //         page = pageNumber;\n    //     } else {\n    //         page = 1;\n    //     }\n    //     const url = this.getUrlByPage(page)\n    //     const res = await axios.get(url)\n    //     const results = res.data.results\n    //     console.log(results)\n    //     return results;\n    // }\n\n    // getUrlByPage = (page) => {\n    //     return `${this.api.url_start}${this.api.popular}${this.api.key}${this.api.language}${this.api.page}${page}`;\n    // }\n\n\n    // getMovieById = async (movieID) => {\n    //     const url = `${this.api.url_start}${movieID}?${this.api.key}${this.api.language}`\n    //     console.log(url)\n    //     const res = await axios.get(url)\n    //     const data = res.data\n    //     console.log(data)\n    //     return data;\n    // }\n\n    // searchMovie = async (searchItem, page) => {\n    //     const url = `${this.api.url_start_search}${this.api.key}${this.api.language}${this.api.query}${searchItem}${this.api.page}${page}${this.api.no_adult}`\n    //     console.log(url)\n    //     const res = await axios.get(url)\n    //     const results = res.data.results\n    //     console.log(results)\n    //     return results;\n    // }\n\n}\n\nconst call = new apiCalls();\nexport default call;","class Utils {\n  getClientProperty = (property, clients) => {\n    return clients.map((c) => c[property]);\n  };\n\n  reduceDuplications = (arrArg) => {\n    return arrArg.filter((elem, pos, arr) => {\n      return arr.indexOf(elem) === pos;\n    });\n  };\n\n  findClientIndex = (clients, client) => {\n    for (let i in clients) {\n      if (clients[i].client === client) {\n        return i;\n      }\n    }\n  };\n\n  findClientIndexById = (clients, id) => {\n    for (let i in clients) {\n      if (clients[i]._id === id) {\n        return i;\n      }\n    }\n    return false;\n  };\n\n  isFrom2018 = (startYear, isBefore) => {\n    let year = startYear.slice(0, 4);\n    if (isBefore) {\n      return year < 2018;\n    } else {\n      return year >= 2018;\n    }\n  };\n\n  filterSalesByYear = (firstContactDate, year) => {\n    return firstContactDate.slice(0, 4) === year;\n  };\n\n  getSales = (clientsToFilter, isSold) =>\n    clientsToFilter.filter((c) => c.sold === isSold);\n\n  getSalesByProperty = (key, clientsToFilter) => {\n    return this.getClientProperty(key, utils.getSales(clientsToFilter, true));\n  };\n\n  countSalesByKey = (sales) => {\n    return sales.reduce((a, c) => {\n      a[c] = (a[c] || 0) + 1;\n      return a;\n    }, {});\n  };\n\n  getTopSalesByKey = (sales) => {\n    let salesCounts = this.countSalesByKey(sales);\n    console.log(\"salesCounts: \", salesCounts);\n    let maxCount = Math.max(...Object.values(salesCounts));\n    let mostFrequent = Object.keys(salesCounts).filter(\n      (k) => salesCounts[k] === maxCount\n    );\n    console.log(\"mostFrequent: \", mostFrequent);\n    return mostFrequent;\n  };\n\n  getSalesByMonth = (sales, month) => {\n    const fixedDates = sales.map((sale) => {\n      return new Date(sale.firstContact);\n    });\n    const filteredByMonth = fixedDates.filter((d) => d.getMonth() === month);\n    return filteredByMonth.length;\n  };\n}\n\nlet utils = new Utils();\n\nexport default utils;\n","import React from \"react\";\nimport { CLIENTS_HEADERS } from \"../../utils/consts\";\nimport \"../../styles/clients/columnsHeader.css\";\n\nconst ColumnsHeader = () => {\n  function formatHeader(header) {\n    switch (header) {\n      case \"firstContact\":\n        return \"First Contact\";\n      case \"emailType\":\n        return \"Email Type\";\n      default:\n        return header;\n    }\n  }\n  return (\n    <thead>\n      <tr id=\"columns-header-container\">\n        {Object.keys(CLIENTS_HEADERS).map((header, i) => (\n          <th className=\"column-header\" key={i}>\n            {formatHeader(header)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default ColumnsHeader;\n","import React from \"react\";\nimport \"../../styles/general/select.css\";\n\nconst Select = ({ placeholder, onChange, name, optionList, value }) => {\n  return (\n    <select\n      className=\"text-row\"\n      name={name}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      optionlist={optionList}\n    >\n      <option defaultValue=\"All\">All</option>\n      {optionList.map((option, i) => {\n        return (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport utils from \"../../utils/utils\";\nimport { EMAIL_TYPES, IS_SOLD, CLIENTS_HEADERS } from \"../../utils/consts\";\nimport \"../../styles/clients/clientsFilter.css\";\nimport Select from \"../general/Select\";\nclass ClientsFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owners: utils.reduceDuplications(\n        utils.getClientProperty(CLIENTS_HEADERS[\"owner\"], this.props.clients)\n      ),\n      names: utils.getClientProperty(\n        CLIENTS_HEADERS[\"name\"],\n        this.props.clients\n      ),\n      countries: utils.reduceDuplications(\n        utils.getClientProperty(CLIENTS_HEADERS[\"country\"], this.props.clients)\n      ),\n      owner: \"\",\n      sold: \"\",\n      name: \"\",\n      country: \"\",\n      emailType: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.props.updateSelectedFilter(event);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      owners,\n      names,\n      countries,\n      owner,\n      emailType,\n      name,\n      country,\n      sold,\n    } = this.state;\n\n    return (\n      <div className=\"clients-filter-wrapper\">\n        <Filter\n          labelName=\"Name\"\n          placeholder=\"Name\"\n          optionList={names}\n          value={name}\n          onChange={this.handleChange}\n          name=\"name\"\n          isFilterSelect\n        />\n        <Filter\n          labelName=\"Country\"\n          placeholder=\"Country\"\n          optionList={countries}\n          value={country}\n          onChange={this.handleChange}\n          name=\"country\"\n        />\n        <Filter\n          labelName=\"Email Type\"\n          placeholder=\"Email Type\"\n          optionList={EMAIL_TYPES}\n          onChange={this.handleChange}\n          value={emailType}\n          name=\"emailType\"\n        />\n        <Filter\n          labelName=\"Sold\"\n          placeholder=\"Sold\"\n          optionList={IS_SOLD}\n          onChange={this.handleChange}\n          value={sold}\n          name=\"sold\"\n        />\n        <Filter\n          labelName=\"Owner\"\n          placeholder=\"Owner\"\n          optionList={owners}\n          value={owner}\n          name=\"owner\"\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst Filter = ({\n  labelName,\n  optionList,\n  placeholder,\n  onChange,\n  value,\n  name,\n}) => {\n  return (\n    <div className=\"filter-group\">\n      <label>{labelName}: </label>\n      <Select\n        optionList={optionList}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        name={name}\n      />\n    </div>\n  );\n};\n\nexport default ClientsFilter;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../styles/clients/clientsPagination.css\";\n\nclass ClientsPagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isPageReset &&\n      this.props.isPageReset !== prevProps.isPageReset\n    ) {\n      this.setState({ currentPage: 1 });\n    }\n  }\n\n  previousDisplay = (pageNum) => {\n    this.props.updateDisplayByPage(-1, pageNum);\n    this.setState({ currentPage: pageNum });\n  };\n  nextDisplay = (pageNum) => {\n    this.props.updateDisplayByPage(1, pageNum);\n    this.setState({ currentPage: pageNum });\n  };\n\n  handleSinglePageClick = (number) => {\n    const { currentPage } = this.state;\n    if (currentPage > number) {\n      this.previousDisplay(number);\n    } else if (currentPage < number) {\n      this.nextDisplay(number);\n    }\n  };\n\n  render() {\n    const { currentPage } = this.state;\n    const { pageCount } = this.props;\n    let current = currentPage;\n\n    return (\n      <div className=\"clients-pagination-wrapper\">\n        <span\n          className={`page-arrow\n            ${currentPage === 1 ? \"page-cursor-not-allowed\" : \"page-cursor\"}\n          `}\n          onClick={() =>\n            this.previousDisplay(current > 1 ? current - 1 : current)\n          }\n        >\n          <FontAwesomeIcon\n            icon={faArrowCircleLeft}\n            style={{ marginRight: 5 }}\n          />\n          previous\n        </span>\n        <PageNumbers\n          pageCount={this.props.pageCount}\n          pageLimit={this.props.pageLimit}\n          handleSinglePageClick={this.handleSinglePageClick}\n        />\n        <span\n          onClick={() =>\n            this.nextDisplay(current < pageCount ? current + 1 : current)\n          }\n          className={`page-arrow\n            ${\n              currentPage === pageCount\n                ? \"page-cursor-not-allowed\"\n                : \"page-cursor\"\n            }\n          `}\n        >\n          next\n          <FontAwesomeIcon\n            icon={faArrowCircleRight}\n            style={{ marginLeft: 5 }}\n          />\n        </span>\n      </div>\n    );\n  }\n}\n\nconst PageNumbers = ({ pageCount, handleSinglePageClick, pageLimit }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(pageCount); i++) {\n    pageNumbers.push(i);\n  }\n\n  function handlePageClick(e) {\n    handleSinglePageClick(Number(e.target.id));\n  }\n\n  return (\n    <ul className=\"page-numbers\">\n      {pageNumbers.map((num) => {\n        return (\n          <li\n            key={num}\n            id={num}\n            className={`page-number\n              ${\n                Math.ceil(pageLimit / 20) === num\n                  ? \"current-page-number\"\n                  : \"not-current-page\"\n              }\n              ${\n                num > Math.ceil(pageLimit / 20) + 10 ||\n                num < Math.ceil(pageLimit / 20) - 10\n                  ? \"page-not-in-range\"\n                  : \"\"\n              }\n            `}\n            onClick={handlePageClick}\n          >\n            {num}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ClientsPagination;\n","import React, { Component } from \"react\";\nimport \"../../styles/clients/clientData.css\";\nclass ClientData extends Component {\n  generateClientToEdit = () => {\n    const { id, name, country, toggleEditClient } = this.props;\n    let clientToEdit = {\n      id,\n      firstName: name.split(\" \")[0],\n      sureName: name.split(\" \")[1],\n      country,\n    };\n    toggleEditClient(clientToEdit);\n  };\n\n  render() {\n    const { name, emailType, sold, owner, id, country } = this.props;\n    let fixedName = name.split(\" \")[0];\n    let sureName = name.split(\" \")[1];\n    let firstContact = this.props.firstContact.split(\"T\")[0];\n\n    return (\n      <React.Fragment>\n        <tr\n          className=\"row-container\"\n          id={id}\n          onClick={this.generateClientToEdit}\n        >\n          <td className=\"rowItem\">{fixedName}</td>\n          <td className=\"rowItem\">{sureName}</td>\n          <td className=\"rowItem\">{country}</td>\n          <td className=\"rowItem\">{firstContact}</td>\n          <td className=\"rowItem\">{emailType}</td>\n          <td className=\"rowItem\">\n            {sold ? (\n              <span>\n                <strong>V</strong>\n              </span>\n            ) : (\n              \"-\"\n            )}\n          </td>\n          <td className=\"rowItem\">{owner}</td>\n        </tr>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ClientData;\n","import React from \"react\";\nimport ClientData from \"./ClientData\";\n\nconst ClientRow = ({ clients, submitInputChange, toggleEditClient }) => {\n  return (\n    <tbody>\n      {clients &&\n        clients.map((c) => {\n          return (\n            <ClientData\n              id={c._id}\n              key={c._id}\n              name={c.name}\n              country={c.country}\n              firstContact={c.firstContact}\n              emailType={c.emailType}\n              sold={c.sold}\n              owner={c.owner}\n              toggleEditClient={toggleEditClient}\n            />\n          );\n        })}\n    </tbody>\n  );\n};\n\nexport default ClientRow;\n","import React, { Component } from \"react\";\nimport \"../../styles/clients/editClientPopUp.css\";\n\nclass EditClientPopUp extends Component {\n  state = {\n    id: this.props.clientToEdit.id,\n    firstName: this.props.clientToEdit.name,\n    sureName: this.props.clientToEdit.sureName,\n    country: this.props.clientToEdit.country,\n  };\n\n  handleInputChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleClosePopup = () => {\n    this.props.toggleEditClient();\n  };\n\n  handleSubmit = () => {\n    let newObject = {};\n    const { submitInputChange } = this.props;\n    let { id, firstName, sureName, country } = this.state;\n    newObject.id = id;\n    newObject.name = firstName + \" \" + sureName;\n    newObject.country = country;\n\n    submitInputChange(newObject);\n  };\n\n  render() {\n    const { id, firstName, sureName, country } = this.state;\n    const { toggleEditClient } = this.props;\n    return (\n      <div className=\"popup-wrapper\">\n        <div className=\"popup-container\" id={id}>\n          <div className=\"exit-btn\" onClick={toggleEditClient}>\n            X\n          </div>\n          <div className=\"popup-row\">\n            <span>Name:</span>\n            <input\n              className=\"popup-input\"\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"popup-row\">\n            <span>Surename:</span>\n            <input\n              className=\"popup-input\"\n              type=\"text\"\n              name=\"sureName\"\n              value={sureName}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"popup-row\">\n            <span>Country</span>\n            <input\n              className=\"popup-input\"\n              type=\"text\"\n              name=\"country\"\n              value={country}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"update-btn\" onClick={this.handleSubmit}>\n            Update\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditClientPopUp;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport call from \"../../ApiCalls/ApiCalls\";\nimport utils from \"../../utils/utils\";\nimport { COLORS } from \"../../utils/consts\";\nimport \"../../styles/clients/clients.css\";\nimport ColumnsHeader from \"./ColumnsHeader\";\nimport ClientsFilter from \"./ClientsFilter\";\nimport ClientsPagination from \"./ClientsPagination\";\nimport ClientRow from \"./ClientRow\";\nimport EditClientPopUp from \"./EditClientPopUp\";\n\nconst itemsPerPage = 20;\n\nclass Clients extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      showPopup: false,\n      clientToEdit: {},\n      clients: [],\n      pageCount: 0,\n      pageLimit: 20,\n      selectValue: \"\",\n      clientsToDisplay: [],\n      currentClients: [],\n      currentFilters: {},\n    };\n  }\n\n  // getClients = async ()  => {\n  //     return axios.get('http://localhost:8100/clients')\n  // }\n\n  // async componentDidMount() {\n  //     const response = await this.getClients()\n  //     console.log(response)\n  //     this.setState({\n  //         loading: false,\n  //         clients: response.data})\n  // }\n\n  async componentDidMount() {\n    setTimeout(() => {\n      let data = call.getClients();\n      localStorage.removeItem(\"currentFilters\");\n      this.setState(\n        {\n          loading: false,\n          clients: data,\n        },\n        this.updateClientsDisplay\n      );\n    }, 1000);\n  }\n\n  submitInputChange = (newObject) => {\n    let { id, name, country } = newObject;\n    const clients = [...this.state.currentClients];\n    let index = utils.findClientIndexById(clients, id);\n    let client = clients[index];\n    client.name = name;\n    client.country = country;\n    this.setState({\n      currentClients: clients,\n      showPopup: !this.state.showPopup,\n      clientToEdit: {\n        id: null,\n        name: \"\",\n        sureName: \"\",\n        country: \"\",\n      },\n    });\n    /*put req. to the server, updating the client\n            axios.put('http://localhost:8100/clients', {\n                id: newObject.id,\n                name: name,\n                country: country\n          })\n          .then((res) => {\n            console.log(res);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n          */\n  };\n\n  toggleEditClient = (client = null) => {\n    const { showPopup } = this.state;\n    this.setState({\n      showPopup: !showPopup,\n      clientToEdit: client && {\n        id: client.id,\n        name: client.firstName,\n        sureName: client.sureName,\n        country: client.country,\n      },\n    });\n  };\n\n  updateDisplayByPage = (pageDirection, pageNum) => {\n    const { pageLimit, clientsToDisplay, pageCount } = this.state;\n\n    let currentPageDisplay = [];\n    let currentPageLimit = pageLimit;\n    let pageIndex = pageNum * itemsPerPage;\n\n    // if specific page =>\n    if (pageDirection === -1) {\n      if (pageNum === 1) {\n        currentPageDisplay = clientsToDisplay.slice(0, itemsPerPage);\n        currentPageLimit = 20;\n      } else {\n        currentPageDisplay = this.updateCurrentPageDisplay(\n          clientsToDisplay,\n          itemsPerPage,\n          pageIndex\n        );\n        currentPageLimit = currentPageLimit - itemsPerPage;\n      }\n    } else {\n      if (pageNum >= pageCount) {\n        currentPageLimit = pageCount * itemsPerPage;\n      } else {\n        currentPageLimit = currentPageLimit + itemsPerPage;\n      }\n      currentPageDisplay = this.updateCurrentPageDisplay(\n        clientsToDisplay,\n        itemsPerPage,\n        pageIndex\n      );\n    }\n\n    this.setState({\n      currentClients: currentPageDisplay,\n      pageLimit: pageIndex,\n      isPageReset: false,\n    });\n  };\n\n  updateCurrentPageDisplay = (clientsToDisplay, itemsPerPage, pageIndex) => {\n    return clientsToDisplay.slice(pageIndex - itemsPerPage, pageIndex);\n  };\n\n  updateClientsDisplay = () => {\n    const { clients, currentFilters } = this.state;\n\n    let filtered = [];\n\n    if (Object.entries(currentFilters).length === 0) {\n      return this.setState({\n        clientsToDisplay: [...clients],\n        pageCount: this.updatePageCount([...clients]),\n        currentClients: [...clients].slice(0, itemsPerPage),\n      });\n    } else {\n      filtered = this.filterByProperty();\n    }\n\n    this.setState({\n      clientsToDisplay: filtered,\n      pageCount: this.updatePageCount(filtered),\n      currentClients: filtered.slice(0, itemsPerPage),\n      isPageReset: true,\n      pageLimit: 20,\n    });\n  };\n\n  updateSelectedFilter = (e) => {\n    const { currentFilters } = this.state;\n    const { value, name } = e.target;\n    let filters = {};\n\n    if (name && value) {\n      if (value === \"All\") {\n        filters[name] = \"\";\n      } else if (name === \"sold\") {\n        if (value === \"Sold\") {\n          filters[name] = true;\n        } else {\n          filters[name] = false;\n        }\n      } else if (name === \"emailType\" && value === \"No Type\") {\n        filters[name] = null;\n      } else {\n        filters[name] = value;\n      }\n    }\n\n    this.setState(\n      {\n        currentFilters: { ...currentFilters, ...filters },\n      },\n      this.updateClientsDisplay\n    );\n  };\n\n  filterByProperty = () => {\n    const { clients, currentFilters } = this.state;\n    let filteredClients = [...clients];\n\n    for (let key in currentFilters) {\n      if (currentFilters[key] !== \"\") {\n        filteredClients = filteredClients.filter(\n          (client) => client[key] === currentFilters[key]\n        );\n      }\n    }\n    return filteredClients;\n  };\n\n  updatePageCount = (clients) => {\n    if (Math.ceil(clients.length / itemsPerPage) <= 1) {\n      return 1;\n    } else {\n      return Math.ceil(clients.length / itemsPerPage);\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      clients,\n      pageLimit,\n      selectValue,\n      pageCount,\n      currentClients,\n      isPageReset,\n      showPopup,\n      clientToEdit,\n    } = this.state;\n\n    if (loading) {\n      return (\n        <div id=\"loader-position\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n    return (\n      <div id=\"clients-container\">\n        <div className=\"clients-child\">\n          <ClientsFilter\n            clients={clients}\n            selectValue={selectValue}\n            updateSelectedFilter={this.updateSelectedFilter}\n          />\n        </div>\n        <div className=\"clients-child\">\n          <ClientsPagination\n            updateDisplayByPage={this.updateDisplayByPage}\n            pageLimit={pageLimit}\n            pageCount={pageCount}\n            isPageReset={isPageReset}\n            clients={currentClients}\n          />\n        </div>\n        <div className=\"clients-child\">\n          <table>\n            <ColumnsHeader />\n            <ClientRow\n              submitInputChange={this.submitInputChange}\n              clients={currentClients}\n              toggleEditClient={this.toggleEditClient}\n            />\n          </table>\n          {showPopup && (\n            <EditClientPopUp\n              clientToEdit={clientToEdit}\n              toggleEditClient={this.toggleEditClient}\n              submitInputChange={this.submitInputChange}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clients;\n","import React, { Component } from \"react\";\nimport \"../../styles/actions/clientInput.css\";\n\nclass ClientInput extends Component {\n  handleChange = (event) => {\n    this.props.getCurrentClient(event); // event.target.value = client.name\n  };\n\n  render() {\n    const { clients } = this.props;\n\n    return (\n      <div className=\"client-input-container\">\n        <div className=\"update-header\">Client:</div>\n        <input\n          className=\"input-client-name\"\n          type=\"text\"\n          list=\"clients\"\n          placeholder=\"Client Name\"\n          onChange={this.handleChange}\n        />\n        <datalist id=\"clients\">\n          {clients.map((client) => (\n            <option value={client.name} key={client._id} />\n          ))}\n        </datalist>\n      </div>\n    );\n  }\n}\n\nexport default ClientInput;\n","import React, { Component } from \"react\";\nimport \"../../styles/actions/updateClient.css\";\n\nclass UpdateClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owners: this.props.owners,\n      emailType: this.props.emailType,\n      newOwner: \"\",\n      newEmailType: \"\",\n      sold: false,\n    };\n  }\n\n  handleOwnerChange = (event) => {\n    this.setState({\n      newOwner: event.target.value,\n    });\n  };\n\n  handleEmailTypeChange = (event) => {\n    this.setState({\n      newEmailType: event.target.value,\n    });\n  };\n\n  changeOwner = () => {\n    this.props.updateClient(this.state.newOwner);\n  };\n\n  changeEmailType = () => {\n    this.props.updateClient(this.state.newEmailType);\n  };\n\n  declareSold = () => {\n    if (this.state.sold) {\n      alert(\"Sale was already declared!\");\n    } else {\n      this.setState(\n        {\n          sold: true,\n        },\n        () => this.props.updateClient(this.state.sold)\n      );\n    }\n  };\n\n  render() {\n    const { owners, emailType } = this.state;\n\n    return (\n      <div className=\"update-client-container\">\n        <UpdateHeader text={\"Transfer ownership to:\"} />\n        <Select\n          list={owners}\n          placeholder=\"Owner\"\n          onChange={this.handleOwnerChange}\n          id={owners}\n          mapList={owners}\n        />\n        <UpdateButton onClick={this.changeOwner} text={\"transfer\"} />\n\n        <UpdateHeader text={\"Send email:\"} />\n        <Select\n          list={emailType}\n          placeholder={emailType}\n          onChange={this.handleEmailTypeChange}\n          id={emailType}\n          mapList={emailType}\n        />\n        <UpdateButton onClick={this.changeEmailType} text={\"send\"} />\n\n        <UpdateHeader text={\"Declare sale!\"} />\n        <div className=\"empty-div\" />\n        <UpdateButton\n          onClick={this.declareSold}\n          text={\"declare\"}\n          id=\"declareBtn\"\n        />\n      </div>\n    );\n  }\n}\n\nconst UpdateHeader = ({ text }) => {\n  return <div className=\"update-header\">{text}</div>;\n};\n\nconst Select = ({ list, placeholder, onChange, id, mapList }) => {\n  return (\n    <div className=\"select\">\n      <input\n        className=\"input-text\"\n        type=\"text\"\n        list={list}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      <datalist id={id}>\n        {mapList.map((item) => (\n          <option value={item} key={item} />\n        ))}\n      </datalist>\n    </div>\n  );\n};\n\nconst UpdateButton = ({ onClick, text }) => {\n  return (\n    <div className=\"light-btn\" onClick={onClick}>\n      {text}\n    </div>\n  );\n};\n\nexport default UpdateClient;\n","import React, { Component } from \"react\";\nimport \"../../styles/actions/addClient.css\";\n\nclass AddClient extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      sureName: \"\",\n      country: \"\",\n      owner: \"\",\n    };\n  }\n\n  handleInputChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  checkNewClientDetails = (obj) => {\n    for (let key in obj) {\n      if (obj[key] === \"\") {\n        return false;\n      }\n    }\n    return;\n  };\n\n  handleAddClient = () => {\n    let newClient = {};\n    let { firstName, sureName, country, owner } = this.state;\n    newClient.name = firstName + \" \" + sureName;\n    newClient.country = country;\n    newClient.owner = owner;\n    if (this.checkNewClientDetails(newClient) === false) {\n      alert(\"please add all the client's details!\");\n    } else {\n      this.props.addNewClient(newClient);\n      this.setState({\n        firstName: \"\",\n        sureName: \"\",\n        country: \"\",\n        owner: \"\",\n      });\n    }\n  };\n\n  render() {\n    let { firstName, sureName, country, owner } = this.state;\n    return (\n      <div className=\"add-client-container\">\n        <InputHeader text={\"First Name:\"} />\n        <Input\n          name={\"firstName\"}\n          value={firstName}\n          onChange={this.handleInputChange}\n        />\n        <InputHeader text={\"Surname:\"} />\n        <Input\n          name={\"sureName\"}\n          value={sureName}\n          onChange={this.handleInputChange}\n        />\n        <InputHeader text={\"Country:\"} />\n        <Input\n          name={\"country\"}\n          value={country}\n          onChange={this.handleInputChange}\n        />\n        <InputHeader text={\"Owner:\"} />\n        <Input name={\"owner\"} value={owner} onChange={this.handleInputChange} />\n        <AddNewClientBtn\n          onClick={this.handleAddClient}\n          text={\"Add New Client\"}\n        />\n      </div>\n    );\n  }\n}\n\nconst InputHeader = ({ text }) => {\n  return <div className=\"input-header\">{text}</div>;\n};\n\nconst Input = ({ name, value, onChange }) => {\n  return (\n    <input\n      className=\"input-add-client\"\n      type=\"text\"\n      name={name}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nconst AddNewClientBtn = ({ onClick, text }) => {\n  return (\n    <div className=\"add-new-client-btn\" onClick={onClick}>\n      {text}\n    </div>\n  );\n};\n\nexport default AddClient;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport call from \"../../ApiCalls/ApiCalls\";\nimport utils from \"../../utils/utils\";\nimport { CLIENTS_HEADERS, COLORS } from \"../../utils/consts\";\nimport \"../../styles/actions/actions.css\";\nimport ClientInput from \"./ClientInput\";\nimport UpdateClient from \"./UpdateClient.js\";\nimport AddClient from \"./AddClient.js\";\nclass Actions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      emailType: [\"A\", \"B\", \"C\", \"D\"],\n      owners: [],\n      currentClient: \"\",\n    };\n  }\n\n  // getClientsDetails = async ()  => {\n  //     return axios.get('http://localhost:8100/clients')\n  // }\n\n  // componentDidMount = async () => {\n  //     const response = await this.getClientsDetails()\n  //     console.log(response)\n  //     this.setState({\n  //         loading: false,\n  //         clients: response.data})\n  // }\n\n  componentDidMount() {\n    setTimeout(() => {\n      let data = call.getClients();\n      this.setState({\n        loading: false,\n        clients: data,\n        owners: utils.reduceDuplications(\n          utils.getClientProperty(CLIENTS_HEADERS[\"owner\"], data)\n        ),\n        currentClient: \"\",\n      });\n    }, 1000);\n  }\n\n  getCurrentClient = (event) => {\n    let clientName = event.target.value;\n    const clients = [...this.state.clients];\n    let client = clients.filter((c) => clientName === c.name);\n\n    if (client[0]) {\n      this.setState({ currentClient: client });\n    }\n  };\n\n  // sendUpdatedClient = async (client, key) => {\n  //     axios.put('http://localhost:8100/actions/update', {\n  //         _id: client._id,\n  //         owner: owner,\n  //         emailType: emailType,\n  //         sold: sold\n  //     })\n  //         .then((res) => {\n  //             console.log(res)\n  //         })\n  //         .catch((err) => {\n  //             console.log(err)\n  //         })\n  // }\n\n  updateClient = (newDetail) => {\n    const { currentClient } = this.state;\n    // let client = currentClient;\n    // this.sendUpdatedClient(client, newDetail)\n  };\n\n  // const mapped = clients.map((c, i) => { return { i: i, client: c } })\n  // console.log(mapped)\n  // const filtered = mapped.filter(c => c.client.name === client.name)\n  // console.log(filtered)\n  // let index = filtered[0].i\n  // // filtered[0].client\n  // // let index = utils.findClientIndex(clients, client)\n  // client.owner = newOwner\n  // clients[index].client = client\n  // this.setState({\n  //     clients: clients\n  // })\n\n  addNewClient = (newClient) => {\n    // post req.to the server, adding new client:\n\n    // axios.post('http://localhost:8100/actions/:client', {\n    //     name: newClient.name,\n    //     country: newClient.country,\n    //     owner: newClient.owner\n    // })\n    //     .then((res) => {\n    //         console.log(res);\n    //         setState({\n    //             clients: clients\n    //         })\n    //     })\n    //     .catch((err) => {\n    //         console.log(err);\n    //     });\n    //should get the client from the server with an Id, than update it in the state?\n    //Or get all the clients including the new client\n\n    const clients = [...this.state.clients];\n    clients.push(newClient);\n    this.setState(\n      {\n        clients: clients,\n      },\n      () => alert(`${clients[clients.length - 1].name} has been added`)\n    );\n  };\n\n  render() {\n    const { loading, clients, owners, emailType } = this.state;\n    if (loading) {\n      return (\n        <div id=\"loader-position\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n    return (\n      <div id=\"actions-container\">\n        <div className=\"actions-child\">\n          <ActionHeader text={\"update\"} />\n        </div>\n        <div className=\"actions-child\">\n          <ClientInput\n            clients={clients}\n            getCurrentClient={this.getCurrentClient}\n          />\n        </div>\n        <div className=\"actions-child\">\n          <UpdateClient\n            owners={owners}\n            emailType={emailType}\n            updateClient={this.updateClient}\n          />\n        </div>\n        <div id=\"section\" />\n        <div className=\"actions-child\">\n          <ActionHeader text={\"add client\"} />\n        </div>\n        <div className=\"actions-child\">\n          <AddClient addNewClient={this.addNewClient} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ActionHeader = ({ text }) => {\n  return <h1 className=\"actions-header\">{text}</h1>;\n};\n\nexport default Actions;\n","import React from \"react\";\nimport {\n  Bar,\n  Text,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  LabelList,\n  BarChart,\n  CartesianGrid,\n} from \"recharts\";\nimport { COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\n\nconst TopEmployees = ({ owners, getOwners }) => {\n  return (\n    <div className=\"chart-wrapper\">\n      <h5 className=\"chart-header\">Top Employees</h5>\n      <BarChart\n        width={400}\n        height={300}\n        data={getOwners(owners)}\n        margin={{ top: 20, bottom: 5, right: 5, left: 5 }}\n        fontSize={12}\n      >\n        <CartesianGrid stroke={COLORS[\"backgroundGray\"]} />\n        <XAxis dataKey=\"name\">\n          <Text width={12} />\n        </XAxis>\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"sales\" fill={COLORS[\"yellow\"]} barSize={20}>\n          <LabelList\n            dataKey=\"name\"\n            position=\"top\"\n            fontSize={12}\n            marginBottom={15}\n          />\n        </Bar>\n      </BarChart>\n    </div>\n  );\n};\n\nexport default TopEmployees;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Text,\n} from \"recharts\";\nimport utils from \"../../../utils/utils\";\nimport { COLORS, MONTHS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\n\nconst SalesByMonth = ({ sales }) => {\n  function getSalesByMonth() {\n    const data = [];\n    for (let i = 0; i < 12; i++) {\n      data.push({\n        name: MONTHS[i],\n        sales: utils.getSalesByMonth(sales, i),\n      });\n    }\n    return data;\n  }\n\n  return (\n    <div className=\"chart-wrapper\">\n      <h5 className=\"chart-header\">2018's Sales by Month</h5>\n      <LineChart\n        width={400}\n        height={300}\n        data={getSalesByMonth()}\n        margin={{ top: 20, bottom: 5, right: 5, left: 5 }}\n        fontSize={12}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\">\n          <Text width={12} />\n        </XAxis>\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"sales\"\n          stroke={COLORS[\"orange\"]}\n          strokeWidth={2}\n          dot={{ fill: COLORS[\"lightgray\"] }}\n        />\n      </LineChart>\n    </div>\n  );\n};\n\nexport default SalesByMonth;\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\nimport utils from \"../../../utils/utils\";\nimport { COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/clientAcquisition.css\";\n\nconst colors = [COLORS[\"brown\"], COLORS[\"yellow\"], COLORS[\"orange\"]];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst ClientAcquisition = ({ sales, salesOf2018, years }) => {\n  function getLast6MonthsOf2018() {\n    let lastHalfYear = 0;\n    for (let i = 5; i < 12; i++) {\n      lastHalfYear += utils.getSalesByMonth(salesOf2018, i);\n    }\n    return lastHalfYear;\n  }\n\n  function before2018() {\n    return sales.filter((s) => utils.isFrom2018(s.firstContact, true));\n  }\n\n  function getSalesData() {\n    const data = [\n      {\n        name: \"last month of 2018\",\n        value: utils.getSalesByMonth(salesOf2018, 11),\n      },\n      { name: \"last 6 months of 2018\", value: getLast6MonthsOf2018() },\n      { name: \"before 2018\", value: before2018().length },\n    ];\n\n    return data;\n  }\n\n  function getSalesDataByYears() {\n    const data = [];\n    for (const [key, value] of Object.entries(years)) {\n      data.push({ name: key, value: value });\n    }\n    return data;\n  }\n\n  function generatePie(pieData, renderCustomizedLabel) {\n    return (\n      <ResponsiveContainer width={250} height={250}>\n        <PieChart fontSize={13}>\n          <Pie\n            data={pieData()}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={renderCustomizedLabel ? false : true}\n            label={\n              renderCustomizedLabel\n                ? renderCustomizedLabel\n                : (name) => `${name.value}`\n            }\n            outerRadius={80}\n            dataKey=\"value\"\n            legendType={\"rect\"}\n          >\n            {pieData().map((entry, index) => (\n              <Cell key={index} fill={colors[index % colors.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  return (\n    <div className=\"pies-wrapper\">\n      <h5 className=\"chart-header\">Client Acquisition</h5>\n      <div className=\"pie-wrapper\">\n        <div>\n          {generatePie(getSalesDataByYears, renderCustomizedLabel)}\n          <p className=\"pie-header\">Sales by Year</p>\n        </div>\n        <div>\n          {generatePie(getSalesData)}\n          <p className=\"pie-header\">Sales comparison</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientAcquisition;\n","import React, { Component } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Text,\n} from \"recharts\";\nimport { SALES_BY_CATEGORY, COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/salesByCategory.css\";\n\nclass SalesByCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: \"country\",\n    };\n  }\n  handleCategoryChange = (e) => {\n    const { value } = e.target;\n    this.setState({ category: value });\n  };\n\n  generateCategoryData = () => {\n    const { category } = this.state;\n    const {\n      getSalesByCategory,\n      countries,\n      owners,\n      emailTypes,\n      years,\n    } = this.props;\n\n    switch (category) {\n      case \"country\":\n        return getSalesByCategory(countries);\n      case \"owner\":\n        return getSalesByCategory(owners);\n      case \"emailType\":\n        return getSalesByCategory(this._sortEmailTypes(emailTypes));\n      case \"year\":\n        return getSalesByCategory(years);\n      default:\n        return getSalesByCategory(countries);\n    }\n  };\n\n  generateAreaColor = () => {\n    const { category } = this.state;\n    switch (category) {\n      case \"country\":\n        return COLORS[\"brown\"];\n      case \"owner\":\n        return COLORS[\"yellow\"];\n      case \"emailType\":\n        return COLORS[\"orange\"];\n      case \"year\":\n        return COLORS[\"lightgray\"];\n      default:\n        return COLORS[\"lightgray\"];\n    }\n  };\n\n  _sortEmailTypes = (emailTypes) => {\n    return Object.keys(emailTypes)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = emailTypes[key];\n        return obj;\n      }, {});\n  };\n\n  render() {\n    const { category } = this.state;\n\n    return (\n      <div className=\"chart-wrapper\">\n        <div className=\"category-header\">\n          <h5 className=\"chart-header\">Sales by</h5>\n          <select\n            className=\"select-category\"\n            value={category}\n            onChange={this.handleCategoryChange}\n          >\n            {Object.keys(SALES_BY_CATEGORY).map((c, i) => {\n              return (\n                <option value={c} key={i} name={c}>\n                  {SALES_BY_CATEGORY[c]}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <AreaChart\n          width={400}\n          height={300}\n          data={this.generateCategoryData()}\n          margin={{ top: 20, bottom: 5, right: 5, left: 5 }}\n          fontSize={12}\n        >\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            strokeWidth={2}\n            dot={{ fill: COLORS[\"lightgray\"] }}\n          />\n          <XAxis dataKey=\"name\">\n            <Text width={12} />\n          </XAxis>\n          <YAxis />\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"sales\"\n            stroke={this.generateAreaColor()}\n            fill={this.generateAreaColor()}\n            fillOpacity={0.8}\n          />\n        </AreaChart>\n      </div>\n    );\n  }\n}\n\nexport default SalesByCategory;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"../../styles/analytics/badges.css\";\n\nconst Badges = ({ badges }) => {\n  return (\n    <div className=\"badges-wrapper\">\n      {badges.map((badge) => {\n        return (\n          <div\n            className=\"badge\"\n            key={badge.id}\n            name={badge.name}\n            icon={badge.icon}\n            header={badge.header}\n            description={badge.description}\n          >\n            <FontAwesomeIcon icon={badge.icon} className=\"badge-icon\" />\n            <p className=\"badge-header tooltip-hover\">\n              {badge.header}\n              <span className=\"badge-tooltip\">{badge.description}</span>\n            </p>\n            <p className=\"badge-desc\">{badge.description}</p>\n            <h2 className=\"badge-result\">{badge.result}</h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Badges;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  faUsers,\n  faEnvelope,\n  faUserPlus,\n  faGlobeAmericas,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport call from \"../../ApiCalls/ApiCalls\";\nimport utils from \"../../utils/utils\";\nimport { COLORS } from \"../../utils/consts\";\nimport \"../../styles/analytics/analytics.css\";\nimport TopEmployees from \"./charts/TopEmployees\";\nimport SalesByMonth from \"./charts/SalesByMonth\";\nimport ClientAcquisition from \"./charts/ClientAcquisition\";\nimport SalesByCategory from \"./charts/SalesByCategory\";\nimport Badges from \"./Badges\";\nclass Analytics extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    // TODO - get from server\n    setTimeout(() => {\n      let data = call.getClients();\n      this.setState({\n        loading: false,\n        clients: data,\n      });\n    }, 1000);\n  }\n\n  getBadges = () => {\n    const { clients } = this.state;\n    return [\n      {\n        id: 1,\n        name: \"longTimeClients\",\n        icon: faUsers,\n        header: \"Long-time Clients\",\n        description: \"Clients who joined before 2018\",\n        result: clients.filter((c) => utils.isFrom2018(c.firstContact, true))\n          .length,\n      },\n      {\n        id: 2,\n        name: \"emailsSent\",\n        icon: faEnvelope,\n        header: \"Emails Sent\",\n        description: \"Number of emails sent in total\",\n        result: clients.filter((c) => c.emailType !== null).length,\n      },\n      {\n        id: 3,\n        name: \"targetClients\",\n        icon: faUserPlus,\n        header: \"Target Clients\",\n        description: \"Clients without acquisition\",\n        result: utils.getSales(clients, false).length,\n      },\n      {\n        id: 4,\n        name: \"hottestCountry\",\n        icon: faGlobeAmericas,\n        header: \"Hottest Country\",\n        description: \"Country with highest sales\",\n        result: utils.getTopSalesByKey(\n          utils.getSalesByProperty(\"country\", clients)\n        ),\n      },\n    ];\n  };\n\n  getSalesOf2018 = () => {\n    const { clients } = this.state;\n    return utils\n      .getSales(clients, true)\n      .filter((c) => utils.isFrom2018(c.firstContact, false));\n  };\n\n  getSalesByYear = () => {\n    const { clients } = this.state;\n    return utils.getSales(clients, true).map((c) => c.firstContact.slice(0, 4));\n  };\n\n  getSalesByClientsCategory(clientsByCategory) {\n    const data = [];\n    for (const [key, value] of Object.entries(clientsByCategory)) {\n      data.push({\n        name: key,\n        sales: value,\n      });\n    }\n    return data;\n  }\n\n  render() {\n    const { loading, clients } = this.state;\n\n    if (loading) {\n      return (\n        <div id=\"loader-position\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div id=\"analytics-container\">\n        <Badges badges={this.getBadges()} />\n        <div className=\"charts-container\">\n          <TopEmployees\n            owners={utils.countSalesByKey(\n              utils.getSalesByProperty(\"owner\", clients)\n            )}\n            getOwners={this.getSalesByClientsCategory}\n          />\n          <SalesByMonth sales={this.getSalesOf2018()} />\n          <SalesByCategory\n            clients={clients}\n            owners={utils.countSalesByKey(\n              utils.getSalesByProperty(\"owner\", clients)\n            )}\n            getSalesByCategory={this.getSalesByClientsCategory}\n            countries={utils.countSalesByKey(\n              utils.getSalesByProperty(\"country\", clients)\n            )}\n            emailTypes={utils.countSalesByKey(\n              utils.getSalesByProperty(\"emailType\", clients)\n            )}\n            years={utils.countSalesByKey(this.getSalesByYear())}\n          />\n          <ClientAcquisition\n            sales={utils.getSales(clients, true)}\n            salesOf2018={this.getSalesOf2018()}\n            years={utils.countSalesByKey(this.getSalesByYear())}\n            getSalesByCategory={this.getSalesByClientsCategory}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport { COLORS } from \"./utils/consts\";\nimport Navbar from \"./components/general/Navbar.js\";\nimport Landing from \"./components/general/Landing.js\";\nimport Clients from \"./components/clients/Clients.js\";\nimport Actions from \"./components/actions/Actions.js\";\nimport Analytics from \"./components/analytics/Analytics\";\nimport \"./styles/app.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ loading: false }), 1000);\n  }\n  // componentDidMount = async ()=> {\n  //   const state = await JSON.parse(localStorage.getItem('state'))\n  //   if (state) {\n  //     this.setState({\n  //       movies: state.movies,\n  //       users: state.users,\n  //       currentUser: state.currentUser,\n  //       search: state.search\n  //     })\n  //   }\n  // }\n\n  // async componentDidMount() {\n  //   setTimeout(() => {\n  //     let data = require('./data.json')\n  //     this.setState({\n  //       costumers: data\n  //     })\n  //     console.log(\"state is updated with data\")\n  //   }, 1000)\n  // }\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      return (\n        <div id=\"general-loader\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Router>\n        <div className=\"app\">\n          <div className=\"general\">\n            <Navbar />\n          </div>\n          <div>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/clients\" exact component={Clients} />\n            <Route path=\"/actions\" exact component={Actions} />\n            <Route path=\"/analytics\" exact component={Analytics} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}