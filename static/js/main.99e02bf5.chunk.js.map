{"version":3,"sources":["utils/consts.js","components/general/Navbar.js","components/general/Landing.js","components/clients/ColumnsHeader.js","utils/utils.js","components/general/Select.js","components/clients/ClientsFilter.js","components/clients/ClientsPagination.js","components/clients/ClientData.js","components/clients/ClientRow.js","components/clients/EditClientPopUp.js","components/clients/Clients.js","components/general/Required.js","components/actions/ActionSubHeader.js","components/actions/Datalist.js","components/actions/ClientInput.js","components/general/Alert.js","components/actions/UpdateClient.js","components/actions/AddClient.js","components/actions/Actions.js","components/analytics/charts/TopEmployees.js","components/analytics/charts/SalesByMonth.js","components/analytics/charts/ClientAcquisition.js","components/analytics/charts/SalesByCategory.js","components/analytics/Badges.js","components/analytics/Analytics.js","App.js","index.js"],"names":["URL","NAV_LINKS","CLIENTS_HEADERS","name","surname","country","firstContact","emailType","sold","owner","EMAIL_TYPES","IS_SOLD","ACTION_HEADERS","main","update","addClient","client","transferOwnership","sendEmail","declareSale","add","firstName","ACTIONS_BUTTONS","transfer","send","declare","addNew","ACTIONS_ALERTS","currentClient","MONTHS","SALES_BY_CATEGORY","year","COLORS","brown","yellow","orange","lightgray","backgroundGray","cyan","Navbar","isLinkActive","linkPath","pathname","concat","this","props","location","react_default","a","createElement","id","Link","to","className","Component","withRouter","Landing","Landing_LinkContainer","path","text","LinkContainer","_ref","ColumnsHeader","Object","keys","map","header","i","key","formatHeader","utils","getClientProperty","property","clients","c","reduceDuplications","arrArg","filter","elem","pos","arr","indexOf","findClientIndex","findClientIndexById","_id","isFrom2018","startYear","isBefore","slice","filterSalesByYear","firstContactDate","getSales","clientsToFilter","isSold","getSalesByProperty","_this","countSalesByKey","sales","reduce","getTopSalesByKey","salesCounts","console","log","maxCount","Math","max","apply","toConsumableArray","values","mostFrequent","k","getSalesByMonth","month","sale","Date","d","getMonth","length","Select","placeholder","onChange","optionList","value","defaultValue","optionlist","option","ClientsFilter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","updateSelectedFilter","setState","defineProperty","target","state","owners","names","countries","_this$state","ClientsFilter_Filter","labelName","isFilterSelect","Filter","general_Select","ClientsPagination","previousDisplay","pageNum","updateDisplayByPage","currentPage","nextDisplay","handleSinglePageClick","number","prevProps","isPageReset","_this2","pageCount","current","onClick","index_es","icon","faArrowCircleLeft","style","marginRight","ClientsPagination_PageNumbers","pageLimit","faArrowCircleRight","marginLeft","PageNumbers","pageNumbers","ceil","push","handlePageClick","e","Number","num","ClientData","generateClientToEdit","_this$props","toggleEditClient","_this$props2","fixedName","split","formatFirstContact","Fragment","ClientRow","clients_ClientData","EditClientPopUp","clientToEdit","handleInputChange","_event$target","handleClosePopup","handleSubmit","submitInputChange","clientToUpdate","objectSpread","_this$state2","faTimes","type","itemsPerPage","Clients","updatedClient","showPopup","axios","put","then","res","catch","err","getClientsFromServer","arguments","undefined","pageDirection","clientsToDisplay","currentPageDisplay","pageIndex","updateCurrentPageDisplay","currentClients","updateClientsDisplay","_this$state3","currentFilters","filtered","entries","updatePageCount","filterByProperty","_e$target","filters","_this$state4","filteredClients","_loop","loading","selectValue","get","data","_this$state5","react_loader_spinner_default","color","height","width","clients_ClientsFilter","clients_ClientsPagination","clients_ColumnsHeader","clients_ClientRow","clients_EditClientPopUp","Required","isClient","faAsterisk","ActionSubHeader","Datalist","list","mapList","isAddClient","item","ClientInput","getCurrentClient","general_Required","actions_ActionSubHeader","actions_Datalist","Alert","toggleAlert","faExclamationCircle","UpdateClient","resetInputes","Array","from","document","querySelectorAll","forEach","input","changeOwner","updateClient","alertText","alert","changeEmailType","declareSold","_this$props3","emailTypes","general_Alert","onFocuse","onFocus","UpdateClient_UpdateButton","UpdateButton","AddClient","checkNewClientDetails","obj","validateAction","clientAction","alertType","handleAddClient","newClient","addNewClient","AddClient_InputWrapper","inputType","inputTypeString","AddClient_AddNewClientBtn","InputWrapper","AddClient_Input","Input","_ref2","AddNewClientBtn","_ref3","Actions","chosenClient","updatedClientData","post","Actions_ActionHeader","actions_ClientInput","actions_UpdateClient","actions_AddClient","ActionHeader","TopEmployees","getOwners","es6","margin","top","bottom","right","left","fontSize","stroke","dataKey","fill","barSize","position","marginBottom","SalesByMonth","strokeDasharray","strokeWidth","dot","colors","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","ClientAcquisition","salesOf2018","years","getLast6MonthsOf2018","lastHalfYear","generatePie","pieData","labelLine","label","legendType","entry","index","_i","_Object$entries","_ref5","_ref4","slicedToArray","s","SalesByCategory","handleCategoryChange","category","generateCategoryData","getSalesByCategory","_sortEmailTypes","generateAreaColor","sort","fillOpacity","Badges","badges","badge","description","result","Analytics","getBadges","faUsers","faEnvelope","faUserPlus","faGlobeAmericas","getSalesOf2018","getSalesByYear","clientsByCategory","analytics_Badges","charts_TopEmployees","getSalesByClientsCategory","charts_SalesByMonth","charts_SalesByCategory","charts_ClientAcquisition","App","setTimeout","HashRouter","general_Navbar","Route","exact","component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.99e02bf5.chunk.js","sourcesContent":["export const URL = \"http://localhost:8100/clients/\";\n\nexport const NAV_LINKS = {\n  home: \"Home\",\n  clients: \"Clients\",\n  actions: \"Actions\",\n  analytics: \"Analytics\",\n};\n\nexport const CLIENTS_HEADERS = {\n  name: \"name\",\n  surname: \"name\",\n  country: \"country\",\n  firstContact: \"firstContact\",\n  emailType: \"emailType\",\n  sold: \"sold\",\n  owner: \"owner\",\n};\n\nexport const EMAIL_TYPES = [\"A\", \"B\", \"C\", \"D\", \"No Type\"];\n\nexport const IS_SOLD = [\"Sold\", \"Not sold\"];\n\nexport const ACTION_HEADERS = {\n  main: { update: \"update\", addClient: \"add client\" },\n  update: {\n    client: \"Client:\",\n    transferOwnership: \"Transfer ownership to:\",\n    sendEmail: \"Send email:\",\n    declareSale: \"Declare sale!\",\n  },\n  add: {\n    firstName: \"First Name:\",\n    surname: \"Surname:\",\n    country: \"Country:\",\n    owner: \"Owner:\",\n    emailType: \"Email Type:\",\n  },\n};\n\nexport const ACTIONS_BUTTONS = {\n  update: { transfer: \"transfer\", send: \"send\", declare: \"declare\" },\n  add: { addNew: \"Add New Client\" },\n};\n\nexport const ACTIONS_ALERTS = {\n  update: {\n    currentClient: \"You must choose a client!\",\n    owner: \"You must choose an owner!\",\n    emailType: \"You must choose an email type!\",\n    declareSale: \"Sale was already declared!\",\n  },\n  addClient: {\n    firstName: \"You must add the client's first name\",\n    surname: \"You must add the client's surname\",\n    country: \"You must add the client's country\",\n    owner: \"You must add the client's owner\",\n  },\n};\n\nexport const MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const SALES_BY_CATEGORY = {\n  country: \"Country\",\n  emailType: \"EmailType\",\n  year: \"Year\",\n  owner: \"Owner\",\n};\n\nexport const COLORS = {\n  brown: \"#795548\",\n  yellow: \"#f7ce3e\",\n  orange: \"#ff884b\",\n  lightgray: \"lightgray\",\n  backgroundGray: \"#f5f5f5\",\n  cyan: \"#00bfff\",\n};\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { NAV_LINKS } from \"../../utils/consts\";\nimport \"../../styles/general/navbar.css\";\n\nclass Navbar extends Component {\n  isLinkActive = (linkPath, pathname) => {\n    return `${pathname === linkPath ? \"nav-link nav-link-active\" : \"nav-link\"}`;\n  };\n\n  render() {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    return (\n      <div id=\"navbar-container\">\n        <Link to=\"/\" className={this.isLinkActive(\"/\", pathname)}>\n          {NAV_LINKS[\"home\"]}\n        </Link>\n        <Link to=\"/clients\" className={this.isLinkActive(\"/clients\", pathname)}>\n          {NAV_LINKS[\"clients\"]}\n        </Link>\n        <Link to=\"/actions\" className={this.isLinkActive(\"/actions\", pathname)}>\n          {NAV_LINKS[\"actions\"]}\n        </Link>\n        <Link\n          to=\"/analytics\"\n          className={this.isLinkActive(\"/analytics\", pathname)}\n        >\n          {NAV_LINKS[\"analytics\"]}\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NAV_LINKS } from \"../../utils/consts\";\nimport \"../../styles/general/landing.css\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"landing-container\">\n        <div className=\"landing-header\">\n          <span>CRM - manage your success</span>\n        </div>\n        <div className=\"landing-links-wrapper\">\n          <LinkContainer path={\"/clients\"} text={NAV_LINKS[\"clients\"]} />\n          <LinkContainer path={\"/actions\"} text={NAV_LINKS[\"actions\"]} />\n          <LinkContainer path={\"/analytics\"} text={NAV_LINKS[\"analytics\"]} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst LinkContainer = ({ path, text }) => {\n  return (\n    <Link to={path} className=\"link-square\">\n      <span className=\"single-link\">{text}</span>\n    </Link>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport { CLIENTS_HEADERS } from \"../../utils/consts\";\nimport \"../../styles/clients/columnsHeader.css\";\n\nconst ColumnsHeader = () => {\n  function formatHeader(header) {\n    switch (header) {\n      case \"firstContact\":\n        return \"First Contact\";\n      case \"emailType\":\n        return \"Email Type\";\n      default:\n        return header;\n    }\n  }\n  return (\n    <thead>\n      <tr id=\"columns-header-container\">\n        {Object.keys(CLIENTS_HEADERS).map((header, i) => (\n          <th className=\"column-header\" key={i}>\n            {formatHeader(header)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default ColumnsHeader;\n","class Utils {\n  getClientProperty = (property, clients) => {\n    return clients.map((c) => c[property]);\n  };\n\n  reduceDuplications = (arrArg) => {\n    return arrArg.filter((elem, pos, arr) => {\n      return arr.indexOf(elem) === pos;\n    });\n  };\n\n  findClientIndex = (clients, client) => {\n    for (let i in clients) {\n      if (clients[i].client === client) {\n        return i;\n      }\n    }\n  };\n\n  findClientIndexById = (clients, id) => {\n    for (let i in clients) {\n      if (clients[i]._id === id) {\n        return i;\n      }\n    }\n    return false;\n  };\n\n  isFrom2018 = (startYear, isBefore) => {\n    let year = startYear.slice(0, 4);\n    if (isBefore) {\n      return year < 2018;\n    } else {\n      return year >= 2018;\n    }\n  };\n\n  filterSalesByYear = (firstContactDate, year) => {\n    return firstContactDate.slice(0, 4) === year;\n  };\n\n  getSales = (clientsToFilter, isSold) =>\n    clientsToFilter.filter((c) => c.sold === isSold);\n\n  getSalesByProperty = (key, clientsToFilter) => {\n    return this.getClientProperty(key, utils.getSales(clientsToFilter, true));\n  };\n\n  countSalesByKey = (sales) => {\n    return sales.reduce((a, c) => {\n      a[c] = (a[c] || 0) + 1;\n      return a;\n    }, {});\n  };\n\n  getTopSalesByKey = (sales) => {\n    let salesCounts = this.countSalesByKey(sales);\n    console.log(\"salesCounts: \", salesCounts);\n    let maxCount = Math.max(...Object.values(salesCounts));\n    let mostFrequent = Object.keys(salesCounts).filter(\n      (k) => salesCounts[k] === maxCount\n    );\n    console.log(\"mostFrequent: \", mostFrequent);\n    return mostFrequent;\n  };\n\n  getSalesByMonth = (sales, month) => {\n    const fixedDates = sales.map((sale) => {\n      return new Date(sale.firstContact);\n    });\n    const filteredByMonth = fixedDates.filter((d) => d.getMonth() === month);\n    return filteredByMonth.length;\n  };\n}\n\nlet utils = new Utils();\n\nexport default utils;\n","import React from \"react\";\nimport \"../../styles/general/select.css\";\n\nconst Select = ({\n  placeholder,\n  onChange,\n  name,\n  optionList,\n  value,\n  defaultValue,\n}) => {\n  return (\n    <select\n      className=\"text-row\"\n      name={name}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      optionlist={optionList}\n    >\n      <option defaultValue={defaultValue}>{defaultValue}</option>\n      {optionList.map((option, i) => {\n        return (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport utils from \"../../utils/utils\";\nimport { EMAIL_TYPES, IS_SOLD, CLIENTS_HEADERS } from \"../../utils/consts\";\nimport \"../../styles/clients/clientsFilter.css\";\nimport Select from \"../general/Select\";\nclass ClientsFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owners: utils.reduceDuplications(\n        utils.getClientProperty(CLIENTS_HEADERS[\"owner\"], this.props.clients)\n      ),\n      names: utils.getClientProperty(\n        CLIENTS_HEADERS[\"name\"],\n        this.props.clients\n      ),\n      countries: utils.reduceDuplications(\n        utils.getClientProperty(CLIENTS_HEADERS[\"country\"], this.props.clients)\n      ),\n      owner: \"\",\n      sold: \"\",\n      name: \"\",\n      country: \"\",\n      emailType: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.props.updateSelectedFilter(event);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      owners,\n      names,\n      countries,\n      owner,\n      emailType,\n      name,\n      country,\n      sold,\n    } = this.state;\n\n    return (\n      <div className=\"clients-filter-wrapper\">\n        <Filter\n          labelName=\"Name\"\n          placeholder=\"Name\"\n          optionList={names}\n          value={name}\n          onChange={this.handleChange}\n          name=\"name\"\n          isFilterSelect\n        />\n        <Filter\n          labelName=\"Country\"\n          placeholder=\"Country\"\n          optionList={countries}\n          value={country}\n          onChange={this.handleChange}\n          name=\"country\"\n        />\n        <Filter\n          labelName=\"Email Type\"\n          placeholder=\"Email Type\"\n          optionList={EMAIL_TYPES}\n          onChange={this.handleChange}\n          value={emailType}\n          name=\"emailType\"\n        />\n        <Filter\n          labelName=\"Sold\"\n          placeholder=\"Sold\"\n          optionList={IS_SOLD}\n          onChange={this.handleChange}\n          value={sold}\n          name=\"sold\"\n        />\n        <Filter\n          labelName=\"Owner\"\n          placeholder=\"Owner\"\n          optionList={owners}\n          value={owner}\n          name=\"owner\"\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst Filter = ({\n  labelName,\n  optionList,\n  placeholder,\n  onChange,\n  value,\n  name,\n}) => {\n  return (\n    <div className=\"filter-group\">\n      <label>{labelName}: </label>\n      <Select\n        optionList={optionList}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        name={name}\n        defaultValue=\"All\"\n      />\n    </div>\n  );\n};\n\nexport default ClientsFilter;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../styles/clients/clientsPagination.css\";\n\nclass ClientsPagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isPageReset &&\n      this.props.isPageReset !== prevProps.isPageReset\n    ) {\n      this.setState({ currentPage: 1 });\n    }\n  }\n\n  previousDisplay = (pageNum) => {\n    this.props.updateDisplayByPage(-1, pageNum);\n    this.setState({ currentPage: pageNum });\n  };\n  nextDisplay = (pageNum) => {\n    this.props.updateDisplayByPage(1, pageNum);\n    this.setState({ currentPage: pageNum });\n  };\n\n  handleSinglePageClick = (number) => {\n    const { currentPage } = this.state;\n    if (currentPage > number) {\n      this.previousDisplay(number);\n    } else if (currentPage < number) {\n      this.nextDisplay(number);\n    }\n  };\n\n  render() {\n    const { currentPage } = this.state;\n    const { pageCount } = this.props;\n    let current = currentPage;\n\n    return (\n      <div className=\"clients-pagination-wrapper\">\n        <span\n          className={`page-arrow\n            ${currentPage === 1 ? \"page-cursor-not-allowed\" : \"page-cursor\"}\n          `}\n          onClick={() =>\n            this.previousDisplay(current > 1 ? current - 1 : current)\n          }\n        >\n          <FontAwesomeIcon\n            icon={faArrowCircleLeft}\n            style={{ marginRight: 5 }}\n          />\n          previous\n        </span>\n        <PageNumbers\n          pageCount={this.props.pageCount}\n          pageLimit={this.props.pageLimit}\n          handleSinglePageClick={this.handleSinglePageClick}\n        />\n        <span\n          onClick={() =>\n            this.nextDisplay(current < pageCount ? current + 1 : current)\n          }\n          className={`page-arrow\n            ${\n              currentPage === pageCount\n                ? \"page-cursor-not-allowed\"\n                : \"page-cursor\"\n            }\n          `}\n        >\n          next\n          <FontAwesomeIcon\n            icon={faArrowCircleRight}\n            style={{ marginLeft: 5 }}\n          />\n        </span>\n      </div>\n    );\n  }\n}\n\nconst PageNumbers = ({ pageCount, handleSinglePageClick, pageLimit }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(pageCount); i++) {\n    pageNumbers.push(i);\n  }\n\n  function handlePageClick(e) {\n    handleSinglePageClick(Number(e.target.id));\n  }\n\n  return (\n    <ul className=\"page-numbers\">\n      {pageNumbers.map((num) => {\n        return (\n          <li\n            key={num}\n            id={num}\n            className={`page-number\n              ${\n                Math.ceil(pageLimit / 20) === num\n                  ? \"current-page-number\"\n                  : \"not-current-page\"\n              }\n              ${\n                num > Math.ceil(pageLimit / 20) + 10 ||\n                num < Math.ceil(pageLimit / 20) - 10\n                  ? \"page-not-in-range\"\n                  : \"\"\n              }\n            `}\n            onClick={handlePageClick}\n          >\n            {num}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ClientsPagination;\n","import React, { Component } from \"react\";\nimport \"../../styles/clients/clientData.css\";\nclass ClientData extends Component {\n  generateClientToEdit = () => {\n    const {\n      id,\n      name,\n      country,\n      owner,\n      emailType,\n      sold,\n      toggleEditClient,\n    } = this.props;\n    let clientToEdit = {\n      id,\n      name,\n      country,\n      owner,\n      emailType,\n      sold,\n    };\n    toggleEditClient(clientToEdit);\n  };\n\n  render() {\n    const {\n      name,\n      emailType,\n      sold,\n      owner,\n      id,\n      country,\n      firstContact,\n    } = this.props;\n    let fixedName = name.split(\" \")[0];\n    let surname = name.split(\" \")[1];\n    let formatFirstContact = firstContact.split(\"T\")[0];\n\n    return (\n      <React.Fragment>\n        <tr\n          className=\"row-container\"\n          id={id}\n          onClick={this.generateClientToEdit}\n        >\n          <td className=\"rowItem\">{fixedName}</td>\n          <td className=\"rowItem\">{surname}</td>\n          <td className=\"rowItem\">{country}</td>\n          <td className=\"rowItem\">{formatFirstContact}</td>\n          <td className=\"rowItem\">{emailType}</td>\n          <td className=\"rowItem\">\n            {sold ? (\n              <span>\n                <strong>V</strong>\n              </span>\n            ) : (\n              \"-\"\n            )}\n          </td>\n          <td className=\"rowItem\">{owner}</td>\n        </tr>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ClientData;\n","import React from \"react\";\nimport ClientData from \"./ClientData\";\n\nconst ClientRow = ({ clients, toggleEditClient }) => {\n  return (\n    <tbody>\n      {clients &&\n        clients.map((c) => {\n          return (\n            <ClientData\n              id={c._id}\n              key={c._id}\n              name={c.name}\n              country={c.country}\n              firstContact={c.firstContact}\n              emailType={c.emailType}\n              sold={c.sold}\n              owner={c.owner}\n              toggleEditClient={toggleEditClient}\n            />\n          );\n        })}\n    </tbody>\n  );\n};\n\nexport default ClientRow;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../styles/clients/editClientPopUp.css\";\nclass EditClientPopUp extends Component {\n  state = {\n    firstName: this.props.clientToEdit.name.split(\" \")[0],\n    surname: this.props.clientToEdit.name.split(\" \")[1],\n    country: this.props.clientToEdit.country,\n  };\n\n  handleInputChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleClosePopup = () => {\n    this.props.toggleEditClient();\n  };\n\n  handleSubmit = () => {\n    const { submitInputChange, clientToEdit } = this.props;\n    let { firstName, surname, country } = this.state;\n\n    const clientToUpdate = {\n      name:\n        firstName && surname ? `${firstName} ${surname}` : clientToEdit.name,\n      country: country ? country : clientToEdit.country,\n    };\n\n    submitInputChange({ ...clientToEdit, ...clientToUpdate });\n  };\n\n  render() {\n    const { firstName, surname, country } = this.state;\n    const { toggleEditClient, clientToEdit } = this.props;\n\n    return (\n      <div className=\"popup-wrapper\">\n        <div className=\"popup-container\" id={clientToEdit.id}>\n          <div className=\"exit-btn\" onClick={toggleEditClient}>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n          <div className=\"popup-row\">\n            <span>Name:</span>\n            <input\n              className=\"popup-input\"\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"popup-row\">\n            <span>surname:</span>\n            <input\n              className=\"popup-input\"\n              type=\"text\"\n              name=\"surname\"\n              value={surname}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"popup-row\">\n            <span>Country</span>\n            <input\n              className=\"popup-input\"\n              type=\"text\"\n              name=\"country\"\n              value={country}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"update-btn\" onClick={this.handleSubmit}>\n            Update\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditClientPopUp;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport axios from \"axios\";\n// import call from \"../../ApiCalls/ApiCalls\";\n// import utils from \"../../utils/utils\";\nimport { URL, COLORS } from \"../../utils/consts\";\nimport \"../../styles/clients/clients.css\";\nimport ColumnsHeader from \"./ColumnsHeader\";\nimport ClientsFilter from \"./ClientsFilter\";\nimport ClientsPagination from \"./ClientsPagination\";\nimport ClientRow from \"./ClientRow\";\nimport EditClientPopUp from \"./EditClientPopUp\";\n\nconst itemsPerPage = 20;\n\nclass Clients extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      showPopup: false,\n      clientToEdit: {},\n      clients: [],\n      pageCount: 0,\n      pageLimit: 20,\n      selectValue: \"\",\n      clientsToDisplay: [],\n      currentClients: [],\n      currentFilters: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getClientsFromServer();\n    /* setTimeout(() => {\n      let data = call.getClients();\n      // localStorage.removeItem(\"currentFilters\");\n      this.setState(\n        {\n          loading: false,\n          clients: data,\n        },\n        this.updateClientsDisplay\n      );\n    }, 1000); */\n  }\n\n  getClientsFromServer() {\n    axios\n      .get(URL)\n      .then((res) => {\n        console.log(\"res from clients backend: \", res.data.data);\n        if (res.data.data.length) {\n          const { data } = res.data;\n          this.setState(\n            { loading: false, clients: data },\n            this.updateClientsDisplay\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(\"err from clients backend: \", err);\n      });\n  }\n\n  submitInputChange = (updatedClient) => {\n    const { clientToEdit, showPopup } = this.state;\n\n    axios\n      .put(`${URL}${clientToEdit.id}`, updatedClient)\n      .then((res) => {\n        console.log(\"res from update client (put) backend \", res);\n      })\n      .catch((err) =>\n        console.log(\"err from update client (put) backend \", err)\n      );\n\n    this.setState(\n      {\n        showPopup: !showPopup,\n        clientToEdit: {\n          id: null,\n          name: \"\",\n          country: \"\",\n          owner: \"\",\n          sold: false,\n          emailType: null,\n        },\n      },\n      this.getClientsFromServer\n    );\n  };\n\n  toggleEditClient = (client = null) => {\n    const { showPopup } = this.state;\n    this.setState({\n      showPopup: !showPopup,\n      clientToEdit: client && {\n        id: client.id ? client.id : \"\",\n        name: client.name ? client.name : \"\",\n        country: client.country ? client.country : \"\",\n        owner: client.owner ? client.owner : \"\",\n        emailType: client.emailType ? client.emailType : null,\n        sold: client.sold ? client.sold : false,\n      },\n    });\n  };\n\n  updateDisplayByPage = (pageDirection, pageNum) => {\n    const { pageLimit, clientsToDisplay, pageCount } = this.state;\n\n    let currentPageDisplay = [];\n    let currentPageLimit = pageLimit;\n    let pageIndex = pageNum * itemsPerPage;\n\n    // if specific page =>\n    if (pageDirection === -1) {\n      if (pageNum === 1) {\n        currentPageDisplay = clientsToDisplay.slice(0, itemsPerPage);\n        currentPageLimit = 20;\n      } else {\n        currentPageDisplay = this.updateCurrentPageDisplay(\n          clientsToDisplay,\n          itemsPerPage,\n          pageIndex\n        );\n        currentPageLimit = currentPageLimit - itemsPerPage;\n      }\n    } else {\n      if (pageNum >= pageCount) {\n        currentPageLimit = pageCount * itemsPerPage;\n      } else {\n        currentPageLimit = currentPageLimit + itemsPerPage;\n      }\n      currentPageDisplay = this.updateCurrentPageDisplay(\n        clientsToDisplay,\n        itemsPerPage,\n        pageIndex\n      );\n    }\n\n    this.setState({\n      currentClients: currentPageDisplay,\n      pageLimit: pageIndex,\n      isPageReset: false,\n    });\n  };\n\n  updateCurrentPageDisplay = (clientsToDisplay, itemsPerPage, pageIndex) => {\n    return clientsToDisplay.slice(pageIndex - itemsPerPage, pageIndex);\n  };\n\n  updateClientsDisplay = () => {\n    const { clients, currentFilters } = this.state;\n\n    let filtered = [];\n\n    if (Object.entries(currentFilters).length === 0) {\n      return this.setState({\n        clientsToDisplay: [...clients],\n        pageCount: this.updatePageCount([...clients]),\n        currentClients: [...clients].slice(0, itemsPerPage),\n      });\n    } else {\n      filtered = this.filterByProperty();\n    }\n\n    this.setState({\n      clientsToDisplay: filtered,\n      pageCount: this.updatePageCount(filtered),\n      currentClients: filtered.slice(0, itemsPerPage),\n      isPageReset: true,\n      pageLimit: 20,\n    });\n  };\n\n  updateSelectedFilter = (e) => {\n    const { currentFilters } = this.state;\n    const { value, name } = e.target;\n    let filters = {};\n\n    if (name && value) {\n      if (value === \"All\") {\n        filters[name] = \"\";\n      } else if (name === \"sold\") {\n        if (value === \"Sold\") {\n          filters[name] = true;\n        } else {\n          filters[name] = false;\n        }\n      } else if (name === \"emailType\" && value === \"No Type\") {\n        filters[name] = null;\n      } else {\n        filters[name] = value;\n      }\n    }\n\n    this.setState(\n      {\n        currentFilters: { ...currentFilters, ...filters },\n      },\n      this.updateClientsDisplay\n    );\n  };\n\n  filterByProperty = () => {\n    const { clients, currentFilters } = this.state;\n    let filteredClients = [...clients];\n\n    for (let key in currentFilters) {\n      if (currentFilters[key] !== \"\") {\n        filteredClients = filteredClients.filter(\n          (client) => client[key] === currentFilters[key]\n        );\n      }\n    }\n    return filteredClients;\n  };\n\n  updatePageCount = (clients) => {\n    if (Math.ceil(clients.length / itemsPerPage) <= 1) {\n      return 1;\n    } else {\n      return Math.ceil(clients.length / itemsPerPage);\n    }\n  };\n\n  render() {\n    const {\n      loading,\n      clients,\n      pageLimit,\n      selectValue,\n      pageCount,\n      currentClients,\n      isPageReset,\n      showPopup,\n      clientToEdit,\n    } = this.state;\n    console.log(\"clientToEdit\", clientToEdit);\n\n    if (loading) {\n      return (\n        <div id=\"loader-position\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n    return (\n      <div id=\"clients-container\">\n        <div className=\"clients-child\">\n          <ClientsFilter\n            clients={clients}\n            selectValue={selectValue}\n            updateSelectedFilter={this.updateSelectedFilter}\n          />\n        </div>\n        <div className=\"clients-child\">\n          <ClientsPagination\n            updateDisplayByPage={this.updateDisplayByPage}\n            pageLimit={pageLimit}\n            pageCount={pageCount}\n            isPageReset={isPageReset}\n            clients={currentClients}\n          />\n        </div>\n        <div className=\"clients-child\">\n          <table>\n            <ColumnsHeader />\n            <ClientRow\n              submitInputChange={this.submitInputChange}\n              clients={currentClients}\n              toggleEditClient={this.toggleEditClient}\n            />\n          </table>\n          {showPopup && (\n            <EditClientPopUp\n              clientToEdit={clientToEdit}\n              toggleEditClient={this.toggleEditClient}\n              submitInputChange={this.submitInputChange}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clients;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAsterisk } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../styles/general/required.css\";\n\nconst Required = ({ isClient }) => {\n  return (\n    <FontAwesomeIcon\n      icon={faAsterisk}\n      className={`main ${isClient ? \"client-input\" : \"\"}`}\n    />\n  );\n};\n\nexport default Required;\n","import React from \"react\";\nimport \"../../styles/actions/actionSubHeader.css\";\n\nconst ActionSubHeader = ({ text }) => {\n  return <div className=\"update-header\">{text}</div>;\n};\n\nexport default ActionSubHeader;\n","import React from \"react\";\nimport \"../../styles/actions/datalist.css\";\n\nconst Datalist = ({\n  list,\n  placeholder,\n  name,\n  onChange,\n  id,\n  mapList,\n  isAddClient,\n}) => {\n  return (\n    <div className={isAddClient ? \"datalist-add-client\" : \"datalist-wrapper\"}>\n      <input\n        className={`input-text ${isAddClient ? \"input-text-add-client\" : \"\"}`}\n        type=\"text\"\n        list={list}\n        placeholder={placeholder}\n        name={name}\n        onChange={onChange}\n      />\n      <datalist id={id}>\n        {mapList.map((item, i) => (\n          <option\n            value={item && item.name ? item.name : item}\n            key={item && item._id ? item._id : i}\n          />\n        ))}\n      </datalist>\n    </div>\n  );\n};\n\nexport default Datalist;\n","import React, { Component } from \"react\";\nimport { ACTION_HEADERS } from \"../../utils/consts\";\nimport Required from \"../general/Required\";\nimport ActionSubHeader from \"./ActionSubHeader\";\nimport Datalist from \"./Datalist\";\nimport \"../../styles/actions/clientInput.css\";\n\nclass ClientInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: this.props.clients,\n      currentClient: this.props.currentClient || \"\",\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.clients !== state.clients) {\n      return { clients: props.clients };\n    }\n\n    // Return null if the state hasn't changed\n    return null;\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n    const { currentClient } = this.state;\n    if (value !== currentClient) {\n      this.setState({ currentClient: value });\n      this.props.getCurrentClient(event);\n    }\n  };\n\n  render() {\n    const { clients, currentClient } = this.state;\n\n    console.log(\"current client from client input\", currentClient);\n    console.log(\"clients from client input\", clients);\n\n    return (\n      <div className=\"client-input-container\">\n        <div className=\"client-input-header\">\n          <Required isClient=\"true\" />\n          <ActionSubHeader text={ACTION_HEADERS[\"update\"][\"client\"]} />\n        </div>\n        <Datalist\n          list={clients}\n          placeholder=\"Client Name\"\n          onChange={this.handleChange}\n          id={clients}\n          mapList={clients}\n          name=\"clientName\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ClientInput;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../styles/general/alert.css\";\n\nconst Alert = ({ text, toggleAlert }) => {\n  return (\n    <div className=\"alert-container\">\n      <div className=\"alert-wrapper\">\n        <button className=\"close-btn\" onClick={toggleAlert}>\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n        <p className=\"alert-text\">\n          <FontAwesomeIcon icon={faExclamationCircle} />\n          <span>{text}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport {\n  ACTIONS_ALERTS,\n  ACTION_HEADERS,\n  ACTIONS_BUTTONS,\n} from \"../../utils/consts\";\nimport Alert from \"../general/Alert\";\nimport Datalist from \"./Datalist\";\nimport ActionSubHeader from \"./ActionSubHeader\";\nimport \"../../styles/actions/updateClient.css\";\nclass UpdateClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owners: this.props.owners,\n      emailTypes: this.props.emailTypes,\n      owner: \"\",\n      emailType: \"\",\n      alert: false,\n      alertText: \"\",\n    };\n  }\n\n  handleInputChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  /*   validateAction = (clientAction, alertType) => {\n    if (!clientAction) {\n      this.setState({\n        alertText: ACTIONS_ALERTS[\"update\"][alertType],\n        alert: true,\n      });\n    }\n    return;\n  }; */\n\n  resetInputes = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      (input) => (input.value = \"\")\n    );\n  };\n\n  changeOwner = () => {\n    const { owner } = this.state;\n    const { currentClient, updateClient } = this.props;\n\n    if (!currentClient) {\n      this.setState(\n        {\n          alertText: ACTIONS_ALERTS[\"update\"][\"currentClient\"],\n          alert: true,\n          owner: \"\",\n        },\n        this.resetInputes()\n      );\n      return;\n    }\n\n    if (!owner) {\n      this.setState({\n        alertText: ACTIONS_ALERTS[\"update\"][\"owner\"],\n        alert: true,\n      });\n      console.log(\"current client\", this.props.currentClient);\n\n      return;\n    }\n\n    updateClient({ id: currentClient._id, owner }, this.resetInputes());\n  };\n\n  changeEmailType = () => {\n    const { emailType } = this.state;\n    const { currentClient, updateClient } = this.props;\n\n    if (!currentClient) {\n      this.setState(\n        { alertText: ACTIONS_ALERTS[\"update\"][\"currentClient\"], alert: true },\n        this.resetInputes()\n      );\n      return;\n    }\n\n    if (!emailType) {\n      this.setState({\n        alertText: ACTIONS_ALERTS[\"update\"][\"emailType\"],\n        alert: true,\n      });\n      return;\n    }\n\n    updateClient({ id: currentClient._id, emailType }, this.resetInputes());\n  };\n\n  declareSold = () => {\n    const { currentClient, updateClient } = this.props;\n\n    if (currentClient && currentClient.sold) {\n      this.setState(\n        { alertText: ACTIONS_ALERTS[\"update\"][\"declareSale\"], alert: true },\n        this.resetInputes()\n      );\n      return;\n    } else {\n      if (!currentClient) {\n        this.setState(\n          { alertText: ACTIONS_ALERTS[\"update\"][\"currentClient\"], alert: true },\n          this.resetInputes()\n        );\n        return;\n      }\n      updateClient({ id: currentClient._id, sold: true }, this.resetInputes());\n    }\n  };\n\n  toggleAlert = () => {\n    this.setState({ alert: !alert });\n  };\n\n  render() {\n    const { owners, emailTypes, alert, alertText } = this.state;\n\n    return (\n      <div className=\"update-client-container\">\n        {alert && <Alert text={alertText} toggleAlert={this.toggleAlert} />}\n        <ActionSubHeader text={ACTION_HEADERS[\"update\"][\"transferOwnership\"]} />\n        <Datalist\n          list={owners}\n          placeholder=\"Owner\"\n          id={owners}\n          mapList={owners}\n          name=\"owner\"\n          onChange={this.handleInputChange}\n          onFocuse={this.onFocus}\n        />\n        <UpdateButton\n          onClick={this.changeOwner}\n          text={ACTIONS_BUTTONS[\"update\"][\"transfer\"]}\n        />\n\n        <ActionSubHeader text={ACTION_HEADERS[\"update\"][\"sendEmail\"]} />\n        <Datalist\n          list={emailTypes}\n          placeholder=\"Email Type\"\n          id={emailTypes}\n          mapList={emailTypes}\n          name=\"emailType\"\n          onChange={this.handleInputChange}\n        />\n        <UpdateButton\n          onClick={this.changeEmailType}\n          text={ACTIONS_BUTTONS[\"update\"][\"send\"]}\n        />\n\n        <ActionSubHeader text={ACTION_HEADERS[\"update\"][\"declareSale\"]} />\n        <div className=\"empty-div\" />\n        <UpdateButton\n          onClick={this.declareSold}\n          text={ACTIONS_BUTTONS[\"update\"][\"declare\"]}\n        />\n      </div>\n    );\n  }\n}\n\nconst UpdateButton = ({ onClick, text }) => {\n  return (\n    <div className=\"light-btn\" onClick={onClick}>\n      {text}\n    </div>\n  );\n};\n\nexport default UpdateClient;\n","import React, { Component } from \"react\";\nimport {\n  ACTION_HEADERS,\n  ACTIONS_BUTTONS,\n  ACTIONS_ALERTS,\n} from \"../../utils/consts\";\nimport Alert from \"../general/Alert\";\nimport Required from \"../general/Required\";\nimport Datalist from \"./Datalist\";\nimport ActionSubHeader from \"./ActionSubHeader\";\nimport \"../../styles/actions/addClient.css\";\n\nclass AddClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      surname: \"\",\n      country: \"\",\n      owner: \"\",\n      owners: this.props.owners,\n      alert: false,\n      alertText: \"\",\n    };\n  }\n\n  handleInputChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  checkNewClientDetails = (obj) => {\n    for (let key in obj) {\n      if (obj[key] === \"\") {\n        return false;\n      }\n    }\n    return;\n  };\n\n  validateAction = (clientAction, alertType) => {\n    if (!clientAction) {\n      this.setState({\n        alertText: ACTIONS_ALERTS[\"addClient\"][alertType],\n        alert: true,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  toggleAlert = () => {\n    this.setState({ alert: !alert });\n  };\n\n  resetInputes = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      (input) => (input.value = \"\")\n    );\n  };\n\n  handleAddClient = () => {\n    const { firstName, surname, country, owner } = this.state;\n\n    if (\n      !this.validateAction(firstName, \"firstName\") ||\n      !this.validateAction(surname, \"surname\") ||\n      !this.validateAction(country, \"country\") ||\n      !this.validateAction(owner, \"owner\")\n    ) {\n      return;\n    }\n\n    const newClient = {\n      name: `${firstName} ${surname}`,\n      country: country,\n      owner: owner,\n    };\n\n    if (this.checkNewClientDetails(newClient) === false) {\n      alert(\"please add all the client's details!\");\n    }\n\n    this.props.addNewClient(newClient);\n    this.setState(\n      { firstName: \"\", surname: \"\", country: \"\", owner: \"\" },\n      this.resetInputes\n    );\n  };\n\n  render() {\n    const {\n      firstName,\n      surname,\n      country,\n      alert,\n      alertText,\n      owners,\n    } = this.state;\n\n    return (\n      <div className=\"add-client-container\">\n        {alert && <Alert text={alertText} toggleAlert={this.toggleAlert} />}\n        <InputWrapper\n          inputType={firstName}\n          inputTypeString=\"firstName\"\n          handleInputChange={this.handleInputChange}\n        />\n        <InputWrapper\n          inputType={surname}\n          inputTypeString=\"surname\"\n          handleInputChange={this.handleInputChange}\n        />\n        <InputWrapper\n          inputType={country}\n          inputTypeString=\"country\"\n          handleInputChange={this.handleInputChange}\n        />\n        <InputWrapper\n          inputTypeString=\"owner\"\n          mapList={owners}\n          id={owners}\n          list={owners}\n          handleInputChange={this.handleInputChange}\n        />\n        <AddNewClientBtn\n          onClick={this.handleAddClient}\n          text={ACTIONS_BUTTONS[\"add\"][\"addNew\"]}\n        />\n      </div>\n    );\n  }\n}\n\nconst InputWrapper = ({\n  inputType,\n  inputTypeString,\n  handleInputChange,\n  mapList,\n  list,\n  id,\n}) => {\n  return (\n    <div className=\"input-wrapper\">\n      <Required />\n      <ActionSubHeader text={ACTION_HEADERS[\"add\"][inputTypeString]} />\n      {inputTypeString !== \"owner\" ? (\n        <Input\n          name={inputTypeString}\n          value={inputType}\n          onChange={handleInputChange}\n        />\n      ) : (\n        <Datalist\n          isAddClient=\"true\"\n          list={list}\n          id={id}\n          mapList={mapList}\n          name={inputTypeString}\n          onChange={handleInputChange}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Input = ({ name, value, onChange }) => {\n  return (\n    <input\n      className=\"input-add-client\"\n      type=\"text\"\n      name={name}\n      value={value ? value : \"\"}\n      onChange={onChange}\n    />\n  );\n};\n\nconst AddNewClientBtn = ({ onClick, text }) => {\n  return (\n    <div className=\"add-new-client-btn\" onClick={onClick}>\n      {text}\n    </div>\n  );\n};\n\nexport default AddClient;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport axios from \"axios\";\n// import call from \"../../ApiCalls/ApiCalls\";\nimport utils from \"../../utils/utils\";\nimport {\n  URL,\n  CLIENTS_HEADERS,\n  COLORS,\n  ACTION_HEADERS,\n} from \"../../utils/consts\";\nimport \"../../styles/actions/actions.css\";\nimport ClientInput from \"./ClientInput\";\nimport UpdateClient from \"./UpdateClient.js\";\nimport AddClient from \"./AddClient.js\";\nclass Actions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      emailType: [\"A\", \"B\", \"C\", \"D\"],\n      owners: [],\n      currentClient: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getClientsFromServer();\n    /*  setTimeout(() => {\n      let data = call.getClients();\n      this.setState({\n        loading: false,\n        clients: data,\n        owners: utils.reduceDuplications(\n          utils.getClientProperty(CLIENTS_HEADERS[\"owner\"], data)\n        ),\n        currentClient: \"\",\n      });\n    }, 1000); */\n  }\n\n  getClientsFromServer() {\n    axios\n      .get(URL)\n      .then((res) => {\n        console.log(\"res from clients backend: \", res.data.data);\n        if (res.data.data.length) {\n          const { data } = res.data;\n          this.setState({\n            loading: false,\n            clients: data,\n            owners: utils.reduceDuplications(\n              utils.getClientProperty(CLIENTS_HEADERS[\"owner\"], data)\n            ),\n            currentClient: \"\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(\"err from clients backend: \", err);\n      });\n  }\n\n  getCurrentClient = (event) => {\n    const { clients, currentClient } = this.state;\n    const { value } = event.target;\n\n    let chosenClient = clients.filter((c) => value === c.name);\n\n    if (chosenClient.length && chosenClient[0] !== currentClient) {\n      this.setState({ currentClient: chosenClient[0] });\n    } else if (value === \"\") {\n      this.setState({ currentClient: value });\n    }\n  };\n\n  // sendUpdatedClient = async (client, key) => {\n  //     axios.put('http://localhost:8100/actions/update', {\n  //         _id: client._id,\n  //         owner: owner,\n  //         emailType: emailType,\n  //         sold: sold\n  //     })\n  //         .then((res) => {\n  //             console.log(res)\n  //         })\n  //         .catch((err) => {\n  //             console.log(err)\n  //         })\n  // }\n\n  updateClient = (updatedClientData) => {\n    const { currentClient } = this.state;\n\n    const updatedClient = {\n      emailType: updatedClientData.emailType\n        ? updatedClientData.emailType\n        : currentClient.emailType,\n      sold: updatedClientData.sold\n        ? updatedClientData.sold\n        : currentClient.sold,\n      owner: updatedClientData.owner\n        ? updatedClientData.owner\n        : currentClient.owner,\n    };\n\n    axios\n      .put(`${URL}${currentClient._id}`, {\n        ...currentClient,\n        ...updatedClient,\n      })\n      .then((res) => {\n        console.log(\"res from update client (put) backend \", res);\n      })\n      .catch((err) =>\n        console.log(\"err from update client (put) backend \", err)\n      );\n\n    this.setState({ currentClient: \"\" }, this.getClientsFromServer);\n\n    // this.sendUpdatedClient(client, updatedClient)\n  };\n\n  addNewClient = (newClient) => {\n    const { clients } = this.state;\n    // debugger;\n    axios\n      .post(`${URL}add`, newClient)\n      .then((res) => {\n        console.log(\"res from add new client (post) backend \", res);\n      })\n      .catch((err) => {\n        console.log(\"err from add new client (post) backend \", err);\n      });\n\n    this.setState(\n      {\n        clients: [...clients, newClient],\n      },\n      this.getClientsFromServer\n    );\n    //should get the client from the server with an Id, then update it in the state?\n    //Or get all the clients including the new client\n  };\n\n  render() {\n    const { loading, clients, owners, emailType, currentClient } = this.state;\n\n    if (loading) {\n      return (\n        <div id=\"loader-position\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n    return (\n      <div id=\"actions-container\">\n        <div className=\"actions-child\">\n          <ActionHeader text={ACTION_HEADERS[\"main\"][\"update\"]} />\n        </div>\n        <div className=\"actions-child\">\n          <ClientInput\n            clients={clients}\n            getCurrentClient={this.getCurrentClient}\n          />\n        </div>\n        <div className=\"actions-child\">\n          <UpdateClient\n            owners={owners}\n            emailTypes={emailType}\n            updateClient={this.updateClient}\n            currentClient={currentClient}\n          />\n        </div>\n        <div id=\"section\" />\n        <div className=\"actions-child\">\n          <ActionHeader text={ACTION_HEADERS[\"main\"][\"addClient\"]} />\n        </div>\n        <div className=\"actions-child\">\n          <AddClient addNewClient={this.addNewClient} owners={owners} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ActionHeader = ({ text }) => <h1 className=\"actions-header\">{text}</h1>;\n\nexport default Actions;\n","import React from \"react\";\nimport {\n  Bar,\n  Text,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  LabelList,\n  BarChart,\n  CartesianGrid,\n} from \"recharts\";\nimport { COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\n\nconst TopEmployees = ({ owners, getOwners }) => {\n  return (\n    <div className=\"chart-wrapper\">\n      <h5 className=\"chart-header\">Top Employees</h5>\n      <BarChart\n        width={400}\n        height={300}\n        data={getOwners(owners)}\n        margin={{ top: 20, bottom: 5, right: 5, left: 5 }}\n        fontSize={12}\n      >\n        <CartesianGrid stroke={COLORS[\"backgroundGray\"]} />\n        <XAxis dataKey=\"name\">\n          <Text width={12} />\n        </XAxis>\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"sales\" fill={COLORS[\"yellow\"]} barSize={20}>\n          <LabelList\n            dataKey=\"name\"\n            position=\"top\"\n            fontSize={12}\n            marginBottom={15}\n          />\n        </Bar>\n      </BarChart>\n    </div>\n  );\n};\n\nexport default TopEmployees;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Text,\n} from \"recharts\";\nimport utils from \"../../../utils/utils\";\nimport { COLORS, MONTHS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\n\nconst SalesByMonth = ({ sales }) => {\n  function getSalesByMonth() {\n    const data = [];\n    for (let i = 0; i < 12; i++) {\n      data.push({\n        name: MONTHS[i],\n        sales: utils.getSalesByMonth(sales, i),\n      });\n    }\n    return data;\n  }\n\n  return (\n    <div className=\"chart-wrapper\">\n      <h5 className=\"chart-header\">2018's Sales by Month</h5>\n      <LineChart\n        width={400}\n        height={300}\n        data={getSalesByMonth()}\n        margin={{ top: 20, bottom: 5, right: 5, left: 5 }}\n        fontSize={12}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\">\n          <Text width={12} />\n        </XAxis>\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"sales\"\n          stroke={COLORS[\"orange\"]}\n          strokeWidth={2}\n          dot={{ fill: COLORS[\"lightgray\"] }}\n        />\n      </LineChart>\n    </div>\n  );\n};\n\nexport default SalesByMonth;\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\nimport utils from \"../../../utils/utils\";\nimport { COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/clientAcquisition.css\";\n\nconst colors = [COLORS[\"brown\"], COLORS[\"yellow\"], COLORS[\"orange\"]];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst ClientAcquisition = ({ sales, salesOf2018, years }) => {\n  function getLast6MonthsOf2018() {\n    let lastHalfYear = 0;\n    for (let i = 5; i < 12; i++) {\n      lastHalfYear += utils.getSalesByMonth(salesOf2018, i);\n    }\n    return lastHalfYear;\n  }\n\n  function before2018() {\n    return sales.filter((s) => utils.isFrom2018(s.firstContact, true));\n  }\n\n  function getSalesData() {\n    const data = [\n      {\n        name: \"last month of 2018\",\n        value: utils.getSalesByMonth(salesOf2018, 11),\n      },\n      { name: \"last 6 months of 2018\", value: getLast6MonthsOf2018() },\n      { name: \"before 2018\", value: before2018().length },\n    ];\n\n    return data;\n  }\n\n  function getSalesDataByYears() {\n    const data = [];\n    for (const [key, value] of Object.entries(years)) {\n      data.push({ name: key, value: value });\n    }\n    return data;\n  }\n\n  function generatePie(pieData, renderCustomizedLabel) {\n    return (\n      <ResponsiveContainer width={250} height={250}>\n        <PieChart fontSize={13}>\n          <Pie\n            data={pieData()}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={renderCustomizedLabel ? false : true}\n            label={\n              renderCustomizedLabel\n                ? renderCustomizedLabel\n                : (name) => `${name.value}`\n            }\n            outerRadius={80}\n            dataKey=\"value\"\n            legendType={\"rect\"}\n          >\n            {pieData().map((entry, index) => (\n              <Cell key={index} fill={colors[index % colors.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  return (\n    <div className=\"pies-wrapper\">\n      <h5 className=\"chart-header\">Client Acquisition</h5>\n      <div className=\"pie-wrapper\">\n        <div>\n          {generatePie(getSalesDataByYears, renderCustomizedLabel)}\n          <p className=\"pie-header\">Sales by Year</p>\n        </div>\n        <div>\n          {generatePie(getSalesData)}\n          <p className=\"pie-header\">Sales comparison</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientAcquisition;\n","import React, { Component } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Text,\n} from \"recharts\";\nimport { SALES_BY_CATEGORY, COLORS } from \"../../../utils/consts\";\nimport \"../../../styles/analytics/analytics.css\";\nimport \"../../../styles/analytics/charts/salesByCategory.css\";\n\nclass SalesByCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: \"country\",\n    };\n  }\n  handleCategoryChange = (e) => {\n    const { value } = e.target;\n    this.setState({ category: value });\n  };\n\n  generateCategoryData = () => {\n    const { category } = this.state;\n    const {\n      getSalesByCategory,\n      countries,\n      owners,\n      emailTypes,\n      years,\n    } = this.props;\n\n    switch (category) {\n      case \"country\":\n        return getSalesByCategory(countries);\n      case \"owner\":\n        return getSalesByCategory(owners);\n      case \"emailType\":\n        return getSalesByCategory(this._sortEmailTypes(emailTypes));\n      case \"year\":\n        return getSalesByCategory(years);\n      default:\n        return getSalesByCategory(countries);\n    }\n  };\n\n  generateAreaColor = () => {\n    const { category } = this.state;\n    switch (category) {\n      case \"country\":\n        return COLORS[\"brown\"];\n      case \"owner\":\n        return COLORS[\"yellow\"];\n      case \"emailType\":\n        return COLORS[\"orange\"];\n      case \"year\":\n        return COLORS[\"lightgray\"];\n      default:\n        return COLORS[\"lightgray\"];\n    }\n  };\n\n  _sortEmailTypes = (emailTypes) => {\n    return Object.keys(emailTypes)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = emailTypes[key];\n        return obj;\n      }, {});\n  };\n\n  render() {\n    const { category } = this.state;\n\n    return (\n      <div className=\"chart-wrapper\">\n        <div className=\"category-header\">\n          <h5 className=\"chart-header\">Sales by</h5>\n          <select\n            className=\"select-category\"\n            value={category}\n            onChange={this.handleCategoryChange}\n          >\n            {Object.keys(SALES_BY_CATEGORY).map((c, i) => {\n              return (\n                <option value={c} key={i} name={c}>\n                  {SALES_BY_CATEGORY[c]}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <AreaChart\n          width={400}\n          height={300}\n          data={this.generateCategoryData()}\n          margin={{ top: 20, bottom: 5, right: 5, left: 5 }}\n          fontSize={12}\n        >\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            strokeWidth={2}\n            dot={{ fill: COLORS[\"lightgray\"] }}\n          />\n          <XAxis dataKey=\"name\">\n            <Text width={12} />\n          </XAxis>\n          <YAxis />\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"sales\"\n            stroke={this.generateAreaColor()}\n            fill={this.generateAreaColor()}\n            fillOpacity={0.8}\n          />\n        </AreaChart>\n      </div>\n    );\n  }\n}\n\nexport default SalesByCategory;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"../../styles/analytics/badges.css\";\n\nconst Badges = ({ badges }) => {\n  return (\n    <div className=\"badges-wrapper\">\n      {badges.map((badge) => {\n        return (\n          <div\n            className=\"badge\"\n            key={badge.id}\n            name={badge.name}\n            icon={badge.icon}\n            header={badge.header}\n            description={badge.description}\n          >\n            <FontAwesomeIcon icon={badge.icon} className=\"badge-icon\" />\n            <p className=\"badge-header tooltip-hover\">\n              {badge.header}\n              <span className=\"badge-tooltip\">{badge.description}</span>\n            </p>\n            <p className=\"badge-desc\">{badge.description}</p>\n            <h2 className=\"badge-result\">{badge.result}</h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Badges;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport {\n  faUsers,\n  faEnvelope,\n  faUserPlus,\n  faGlobeAmericas,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport utils from \"../../utils/utils\";\nimport { URL, COLORS } from \"../../utils/consts\";\nimport \"../../styles/analytics/analytics.css\";\nimport TopEmployees from \"./charts/TopEmployees\";\nimport SalesByMonth from \"./charts/SalesByMonth\";\nimport ClientAcquisition from \"./charts/ClientAcquisition\";\nimport SalesByCategory from \"./charts/SalesByCategory\";\nimport Badges from \"./Badges\";\nclass Analytics extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(URL)\n      .then((res) => {\n        console.log(\"res from clients backend: \", res.data.data);\n        if (res.data.data.length) {\n          const { data } = res.data;\n          this.setState({ loading: false, clients: data });\n        }\n      })\n      .catch((err) => {\n        console.log(\"err from clients backend: \", err);\n      });\n  }\n\n  getBadges = () => {\n    const { clients } = this.state;\n    return [\n      {\n        id: 1,\n        name: \"longTimeClients\",\n        icon: faUsers,\n        header: \"Long-time Clients\",\n        description: \"Clients who joined before 2018\",\n        result: clients.filter((c) => utils.isFrom2018(c.firstContact, true))\n          .length,\n      },\n      {\n        id: 2,\n        name: \"emailsSent\",\n        icon: faEnvelope,\n        header: \"Emails Sent\",\n        description: \"Number of emails sent in total\",\n        result: clients.filter((c) => c.emailType !== null).length,\n      },\n      {\n        id: 3,\n        name: \"targetClients\",\n        icon: faUserPlus,\n        header: \"Target Clients\",\n        description: \"Clients without acquisition\",\n        result: utils.getSales(clients, false).length,\n      },\n      {\n        id: 4,\n        name: \"hottestCountry\",\n        icon: faGlobeAmericas,\n        header: \"Hottest Country\",\n        description: \"Country with highest sales\",\n        result: utils.getTopSalesByKey(\n          utils.getSalesByProperty(\"country\", clients)\n        ),\n      },\n    ];\n  };\n\n  getSalesOf2018 = () => {\n    const { clients } = this.state;\n    return utils\n      .getSales(clients, true)\n      .filter((c) => utils.isFrom2018(c.firstContact, false));\n  };\n\n  getSalesByYear = () => {\n    const { clients } = this.state;\n    return utils.getSales(clients, true).map((c) => c.firstContact.slice(0, 4));\n  };\n\n  getSalesByClientsCategory(clientsByCategory) {\n    const data = [];\n    for (const [key, value] of Object.entries(clientsByCategory)) {\n      data.push({\n        name: key,\n        sales: value,\n      });\n    }\n    return data;\n  }\n\n  render() {\n    const { loading, clients } = this.state;\n\n    if (loading) {\n      return (\n        <div id=\"loader-position\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div id=\"analytics-container\">\n        <Badges badges={this.getBadges()} />\n        <div className=\"charts-container\">\n          <TopEmployees\n            owners={utils.countSalesByKey(\n              utils.getSalesByProperty(\"owner\", clients)\n            )}\n            getOwners={this.getSalesByClientsCategory}\n          />\n          <SalesByMonth sales={this.getSalesOf2018()} />\n          <SalesByCategory\n            clients={clients}\n            owners={utils.countSalesByKey(\n              utils.getSalesByProperty(\"owner\", clients)\n            )}\n            getSalesByCategory={this.getSalesByClientsCategory}\n            countries={utils.countSalesByKey(\n              utils.getSalesByProperty(\"country\", clients)\n            )}\n            emailTypes={utils.countSalesByKey(\n              utils.getSalesByProperty(\"emailType\", clients)\n            )}\n            years={utils.countSalesByKey(this.getSalesByYear())}\n          />\n          <ClientAcquisition\n            sales={utils.getSales(clients, true)}\n            salesOf2018={this.getSalesOf2018()}\n            years={utils.countSalesByKey(this.getSalesByYear())}\n            getSalesByCategory={this.getSalesByClientsCategory}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport { COLORS } from \"./utils/consts\";\nimport Navbar from \"./components/general/Navbar.js\";\nimport Landing from \"./components/general/Landing.js\";\nimport Clients from \"./components/clients/Clients.js\";\nimport Actions from \"./components/actions/Actions.js\";\nimport Analytics from \"./components/analytics/Analytics\";\nimport \"./styles/app.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ loading: false }), 1000);\n  }\n  // componentDidMount = async ()=> {\n  //   const state = await JSON.parse(localStorage.getItem('state'))\n  //   if (state) {\n  //     this.setState({\n  //       movies: state.movies,\n  //       users: state.users,\n  //       currentUser: state.currentUser,\n  //       search: state.search\n  //     })\n  //   }\n  // }\n\n  // async componentDidMount() {\n  //   setTimeout(() => {\n  //     let data = require('./data.json')\n  //     this.setState({\n  //       costumers: data\n  //     })\n  //     console.log(\"state is updated with data\")\n  //   }, 1000)\n  // }\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      return (\n        <div id=\"general-loader\">\n          <Loader\n            type=\"Puff\"\n            color={COLORS[\"yellow\"]}\n            height={200}\n            width={200}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Router>\n        <div className=\"app\">\n          <div className=\"general\">\n            <Navbar />\n          </div>\n          <div>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/clients\" exact component={Clients} />\n            <Route path=\"/actions\" exact component={Actions} />\n            <Route path=\"/analytics\" exact component={Analytics} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}